const int nPtBins = 10;
float ptbin[nPtBins+1]={2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,7.0,8.0,10.0};
float ptbinfyj[nPtBins]={2.5,3.5,4.5,5.5,6.5,7.5,8.5,9.5,10.5,11.5};
const int nPtBinsAll = 39;
float ptbinAll[nPtBinsAll+1]={0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.5,3.0,3.5,4.0,4.5,5.0,5.5,6.0,7.0,8.0,10.0,14.0,20.0};
TString FileInPut;
TString FileOutPut;
TString Style[2]={"Pi0","Eta"};
TFile *fout;
TFile * weightFile;
TGraphErrors * gFONLLu;
TGraphErrors * gFONLL;
TH1F *hdNdpTdy;
TH1F *hGammadNdpTdy;
TH1F *hGammaCS;
TF1 *hTpp;
Int_t mNBadRuns;
float mass;
float MassE;
float BR;
int isHotTower(int towId);
double SmearPt(double mcpt);
double CrystalBall2(double* x, double* par);
double ABf(double *x, double *par);
TH1F *hdeltaPtovermcPt_RDM;
TH1F *hmcpt;
TH1F *hrcpt;
TH2F *hPtCorr;
TH2F *hPtDiff;
TH2F *hPtCorrJ;
TH2F *hPtDiffJ;
TH2F *hPtCorrg;
TH2F *hPtDiffg;
TH2F *hPtCorrW;
TH2F *hPtDiffW;
TH2F *hPtCorrJW;
TH2F *hPtDiffJW;
TH2F *hPtCorrgW;
TH2F *hPtDiffgW;
TH1F *hrcptmc;
TH1F *hmcptw;
TH1F *hrcptw;
TH1F *hrcptmcw;
TH1F *hTPCtracksTHT0;
TH1F *hTPCtracksTHT2;
TH1F *hTPCtracksTHT0Mc;
TH1F *hTPCtracksTHT2Mc;
TH2F *hnHitsFit;
TH2F *hnHitsDedx;
TH2F *hDca;
TH2F *hnHitsFitWt;
TH2F *hnHitsDedxWt;
TH2F *hDcaWt;
TH1F *hrcptwnHitsFit;
TH1F *hrcptwnHitsDedx;
TH1F *hrcptwDca;
TH1F *hTPCtracksAdc0SysHT0;
TH1F *hTPCtracksAdc0SysHT2;
TH1F *hTPCtracksPOESysHT0;
TH1F *hTPCtracksPOESysHT2;
TH1F *hTPCtracksAdc0SysSMDHT0;
TH1F *hTPCtracksAdc0SysSMDHT2;
TH1F *hTPCtracksPOESysSMDHT0;
TH1F *hTPCtracksPOESysSMDHT2;
TH2F *hPve;
TH1F *hEMCtracks;
TH1F *hTPCtracksHT0;
TH1F *hTPCtracksHT2;
TH1F *hTPCtracksHT0Mc;
TH1F *hTPCtracksHT2Mc;
TH1F *hTPCtracksSMDHT0;
TH1F *hTPCtracksSMDHT2;
TH1F *hTPCtracksSMDHT0Mc;
TH1F *hTPCtracksSMDHT2Mc;
//TH1F *hEMCmatchingtracks;
TH1F *hSMDtracks;
TH2F *hAdc0vsdsmAdc;
TH2F *hAdc0vsdsmAdcCut;
TH2F *hAdc0;
TH2F *hAdc0Cut;
TH2F *hdsmAdc;
TH2F *hdsmAdcCut;
TH1F *hnTotal;
TH1F *hnTotalyCut;
TH1F *hRcpt;
TH1F *hRcptPosEle;
TH1F *hRcptHT0;
TH1F *hRcptPosEleHT0;
TH1F *hRcptHT2;
TH1F *hRcptPosEleHT2;
TH1F *hRcptSMD;
TH1F *hRcptPosEleSMD;
TH1F *hRcptHT0SMD;
TH1F *hRcptPosEleHT0SMD;
TH1F *hRcptHT2SMD;
TH1F *hRcptPosEleHT2SMD;
TH2F *hmvspt;
TH2F *hmvsptWt;
TH2F *hmvsptHT0;
TH2F *hmvsptWtHT0;
TH2F *hmvsptHT2;
TH2F *hmvsptWtHT2;
TH2F *hmvsptSMD;
TH2F *hmvsptWtSMD;
TH2F *hmvsptHT0SMD;
TH2F *hmvsptWtHT0SMD;
TH2F *hmvsptHT2SMD;
TH2F *hmvsptWtHT2SMD;
TH2F *hGpTPart;
TH2F *hGpTPartWt;
TH1F *hRcptMeeGptP;
TH1F *hRcptMee;
TH1F *hRcptMeePOE;
TH1F *hRcptMeeHT0;
TH1F *hRcptMeeHT2;
TH1F *hRcptMeeSys;
TH1F *hRcptMeeSysHT0;
TH1F *hRcptMeeSysHT2;
TH1F *hRcptMeeSMD;
TH1F *hRcptMeePOESMD;
TH1F *hRcptMeeHT0SMD;
TH1F *hRcptMeeHT2SMD;
TH1F *hRcptMeeSysSMD;
TH1F *hRcptMeeSysHT0SMD;
TH1F *hRcptMeeSysHT2SMD;
TH1F *hRcptMeeSMD1;
TH1F *hRcptMeePOESMD1;
TH1F *hRcptMeeSysSMD1;
TH2F *hRcptMeeSMD2;
TH1F *hRcptMeePOESMD2;
TH1F *hRcptMeeSysSMD2;
TH1F *hRcptMeeSMD3;
TH1F *hRcptMeePOESMD3;
TH1F *hRcptMeeSysSMD3;
