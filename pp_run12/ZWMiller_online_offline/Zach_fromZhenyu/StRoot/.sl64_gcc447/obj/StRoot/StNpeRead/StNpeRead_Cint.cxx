//
// File generated by rootcint at Mon Oct 12 11:41:14 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StNpeRead_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void prescales_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_prescales(void *p);
   static void deleteArray_prescales(void *p);
   static void destruct_prescales(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::prescales*)
   {
      ::prescales *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::prescales >(0);
      static ::ROOT::TGenericClassInfo 
         instance("prescales", ::prescales::Class_Version(), ".sl64_gcc447/obj/StRoot/StNpeRead/prescales.h", 19,
                  typeid(::prescales), DefineBehavior(ptr, ptr),
                  &::prescales::Dictionary, isa_proxy, 4,
                  sizeof(::prescales) );
      instance.SetDelete(&delete_prescales);
      instance.SetDeleteArray(&deleteArray_prescales);
      instance.SetDestructor(&destruct_prescales);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::prescales*)
   {
      return GenerateInitInstanceLocal((::prescales*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::prescales*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StNpeRead_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StNpeRead(void *p);
   static void deleteArray_StNpeRead(void *p);
   static void destruct_StNpeRead(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StNpeRead*)
   {
      ::StNpeRead *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StNpeRead >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StNpeRead", ::StNpeRead::Class_Version(), "StNpeRead.h", 32,
                  typeid(::StNpeRead), DefineBehavior(ptr, ptr),
                  &::StNpeRead::Dictionary, isa_proxy, 4,
                  sizeof(::StNpeRead) );
      instance.SetDelete(&delete_StNpeRead);
      instance.SetDeleteArray(&deleteArray_StNpeRead);
      instance.SetDestructor(&destruct_StNpeRead);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StNpeRead*)
   {
      return GenerateInitInstanceLocal((::StNpeRead*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StNpeRead*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *prescales::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *prescales::Class_Name()
{
   return "prescales";
}

//______________________________________________________________________________
const char *prescales::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::prescales*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int prescales::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::prescales*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void prescales::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::prescales*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *prescales::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::prescales*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StNpeRead::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StNpeRead::Class_Name()
{
   return "StNpeRead";
}

//______________________________________________________________________________
const char *StNpeRead::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StNpeRead*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StNpeRead::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StNpeRead*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StNpeRead::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StNpeRead*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StNpeRead::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StNpeRead*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StNpeRead::Streamer(TBuffer &R__b)
{
   // Stream an object of class StNpeRead.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StNpeRead::Class(),this);
   } else {
      R__b.WriteClassBuffer(StNpeRead::Class(),this);
   }
}

//______________________________________________________________________________
void StNpeRead::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StNpeRead.
      TClass *R__cl = ::StNpeRead::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*mOutputFile", &mOutputFile);
      R__insp.Inspect(R__cl, R__parent, "*mNpeEvent", &mNpeEvent);
      R__insp.Inspect(R__cl, R__parent, "*mPrescales", &mPrescales);
      R__insp.Inspect(R__cl, R__parent, "file_runNumber", (void*)&file_runNumber);
      ::ROOT::GenericShowMembers("ifstream", (void*)&file_runNumber, R__insp, strcat(R__parent,"file_runNumber."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "outfile", (void*)&outfile);
      ::ROOT::GenericShowMembers("ofstream", (void*)&outfile, R__insp, strcat(R__parent,"outfile."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "runID_List", (void*)&runID_List);
      ::ROOT::GenericShowMembers("map<int,int>", (void*)&runID_List, R__insp, strcat(R__parent,"runID_List."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "runIDPico", (void*)&runIDPico);
      ::ROOT::GenericShowMembers("set<Int_t>", (void*)&runIDPico, R__insp, strcat(R__parent,"runIDPico."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "*ADC_nocut", &ADC_nocut);
      R__insp.Inspect(R__cl, R__parent, "*ADC_cut", &ADC_cut);
      R__insp.Inspect(R__cl, R__parent, "*mh1Vz_VPDVz", &mh1Vz_VPDVz);
      R__insp.Inspect(R__cl, R__parent, "*mh1Vz_VPD", &mh1Vz_VPD);
      R__insp.Inspect(R__cl, R__parent, "*mh1VzVPD_VPD", &mh1VzVPD_VPD);
      R__insp.Inspect(R__cl, R__parent, "*mh1Vz_VPDPS", &mh1Vz_VPDPS);
      R__insp.Inspect(R__cl, R__parent, "*mh1PtAllTracks[4]", &mh1PtAllTracks);
      R__insp.Inspect(R__cl, R__parent, "*mh1PtETracks[4]", &mh1PtETracks);
      R__insp.Inspect(R__cl, R__parent, "*mh2InvMassPtAll[4]", &mh2InvMassPtAll);
      R__insp.Inspect(R__cl, R__parent, "*mh2InvMassPtE[4]", &mh2InvMassPtE);
      R__insp.Inspect(R__cl, R__parent, "*mh2InvMassPtUS[4]", &mh2InvMassPtUS);
      R__insp.Inspect(R__cl, R__parent, "*mh2InvMassPtLS[4]", &mh2InvMassPtLS);
      R__insp.Inspect(R__cl, R__parent, "*mh2nSigmaPionPt[4]", &mh2nSigmaPionPt);
      R__insp.Inspect(R__cl, R__parent, "*mh3nTracksZdcx[4][4]", &mh3nTracksZdcx);
      R__insp.Inspect(R__cl, R__parent, "*mh3nTracksZdcxUS[4][4]", &mh3nTracksZdcxUS);
      R__insp.Inspect(R__cl, R__parent, "*mh3nTracksZdcxLS[4][4]", &mh3nTracksZdcxLS);
      R__insp.Inspect(R__cl, R__parent, "*mh3nTracksZdcxHad[4][4]", &mh3nTracksZdcxHad);
      R__insp.Inspect(R__cl, R__parent, "*mh2PtEZdcxHad[4]", &mh2PtEZdcxHad);
      R__insp.Inspect(R__cl, R__parent, "*mh2PtEZdcx[4]", &mh2PtEZdcx);
      R__insp.Inspect(R__cl, R__parent, "*mh2PtEZdcxUS[4]", &mh2PtEZdcxUS);
      R__insp.Inspect(R__cl, R__parent, "*mh2PtEZdcxLS[4]", &mh2PtEZdcxLS);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiIncl[4]", &mh3DelPhiIncl);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotLS[4]", &mh3DelPhiPhotLS);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotUS[4]", &mh3DelPhiPhotUS);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotUSNP[4]", &mh3DelPhiPhotUSNP);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotLSNP[4]", &mh3DelPhiPhotLSNP);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotInclNP[4]", &mh3DelPhiPhotInclNP);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiInclWt[4]", &mh3DelPhiInclWt);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotLSWt[4]", &mh3DelPhiPhotLSWt);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiPhotUSWt[4]", &mh3DelPhiPhotUSWt);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiHadHad[4]", &mh3DelPhiHadHad);
      R__insp.Inspect(R__cl, R__parent, "*mh3DelPhiHadHadWt[4]", &mh3DelPhiHadHadWt);
      R__insp.Inspect(R__cl, R__parent, "*mh1PtHadTracks[4]", &mh1PtHadTracks);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedDelPhi", &mh3MixedDelPhi);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedDelEta", &mh3MixedDelEta);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedEtaPhi", &mh3MixedEtaPhi);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedDelPhiWt", &mh3MixedDelPhiWt);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedDelEtaWt", &mh3MixedDelEtaWt);
      R__insp.Inspect(R__cl, R__parent, "*mh3MixedEtaPhiWt", &mh3MixedEtaPhiWt);
      R__insp.Inspect(R__cl, R__parent, "*mh1delPhiIncl", &mh1delPhiIncl);
      R__insp.Inspect(R__cl, R__parent, "*mh1delPhiUS", &mh1delPhiUS);
      R__insp.Inspect(R__cl, R__parent, "*mh1delPhiLS", &mh1delPhiLS);
      R__insp.Inspect(R__cl, R__parent, "*mh1delPhiHad", &mh1delPhiHad);
      R__insp.Inspect(R__cl, R__parent, "*mh1TrigCount", &mh1TrigCount);
      R__insp.Inspect(R__cl, R__parent, "writeRunQA", &writeRunQA);
      R__insp.Inspect(R__cl, R__parent, "writeDataQA", &writeDataQA);
      R__insp.Inspect(R__cl, R__parent, "writeXiaozhiHists", &writeXiaozhiHists);
      R__insp.Inspect(R__cl, R__parent, "effPars[20][3]", effPars);
      R__insp.Inspect(R__cl, R__parent, "*fEff", &fEff);
      R__insp.Inspect(R__cl, R__parent, "pi", &pi);
      R__insp.Inspect(R__cl, R__parent, "numPtBins", &numPtBins);
      R__insp.Inspect(R__cl, R__parent, "maxBufferSize", &maxBufferSize);
      R__insp.Inspect(R__cl, R__parent, "isAddedToBuffer", &isAddedToBuffer);
      R__insp.Inspect(R__cl, R__parent, "hadPhi[70]", hadPhi);
      R__insp.Inspect(R__cl, R__parent, "hadEta[70]", hadEta);
      R__insp.Inspect(R__cl, R__parent, "hadPt[70]", hadPt);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StNpeRead(void *p) {
      delete ((::StNpeRead*)p);
   }
   static void deleteArray_StNpeRead(void *p) {
      delete [] ((::StNpeRead*)p);
   }
   static void destruct_StNpeRead(void *p) {
      typedef ::StNpeRead current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StNpeRead

//______________________________________________________________________________
void prescales::Streamer(TBuffer &R__b)
{
   // Stream an object of class prescales.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(prescales::Class(),this);
   } else {
      R__b.WriteClassBuffer(prescales::Class(),this);
   }
}

//______________________________________________________________________________
void prescales::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class prescales.
      TClass *R__cl = ::prescales::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mTable", (void*)&mTable);
      ::ROOT::GenericShowMembers("map<int,vecPrescales>", (void*)&mTable, R__insp, strcat(R__parent,"mTable."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mLastQuery", (void*)&mLastQuery);
      ::ROOT::GenericShowMembers("map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator", (void*)&mLastQuery, R__insp, strcat(R__parent,"mLastQuery."),false);
      R__parent[R__ncp] = 0;
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_prescales(void *p) {
      delete ((::prescales*)p);
   }
   static void deleteArray_prescales(void *p) {
      delete [] ((::prescales*)p);
   }
   static void destruct_prescales(void *p) {
      typedef ::prescales current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::prescales

namespace ROOT {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,int>

namespace ROOT {
   void maplEintcOvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void maplEintcOvectorlEfloatgRsPgR_Dictionary();
   static void *new_maplEintcOvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_maplEintcOvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_maplEintcOvectorlEfloatgRsPgR(void *p);
   static void deleteArray_maplEintcOvectorlEfloatgRsPgR(void *p);
   static void destruct_maplEintcOvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,vector<float> >*)
   {
      map<int,vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,vector<float> >", -2, "prec_stl/map", 63,
                  typeid(map<int,vector<float> >), DefineBehavior(ptr, ptr),
                  0, &maplEintcOvectorlEfloatgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,vector<float> >) );
      instance.SetNew(&new_maplEintcOvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_maplEintcOvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<float> > : new map<int,vector<float> >;
   }
   static void *newArray_maplEintcOvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,vector<float> >[nElements] : new map<int,vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOvectorlEfloatgRsPgR(void *p) {
      delete ((map<int,vector<float> >*)p);
   }
   static void deleteArray_maplEintcOvectorlEfloatgRsPgR(void *p) {
      delete [] ((map<int,vector<float> >*)p);
   }
   static void destruct_maplEintcOvectorlEfloatgRsPgR(void *p) {
      typedef map<int,vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,vector<float> >

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

/********************************************************
* .sl64_gcc447/obj/StRoot/StNpeRead/StNpeRead_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStNpeRead_Cint();

extern "C" void G__set_cpp_environmentStNpeRead_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StNpeRead.h");
  G__add_compiledheader("prescales.h");
  G__cpp_reset_tagtableStNpeRead_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStNpeRead_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* prescales */
static int G__StNpeRead_Cint_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((prescales*) G__getstructoffset())->GetPrescale((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((prescales*) G__getstructoffset())->GetNumberOfRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((prescales*) G__getstructoffset())->GetListOfRuns());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((prescales*) G__getstructoffset())->RunIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((prescales*) G__getstructoffset())->RunExists((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((prescales*) G__getstructoffset())->FillPrescalesHist((TH1F*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) prescales::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) prescales::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) prescales::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) prescales::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      prescales::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((prescales*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) prescales::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) prescales::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) prescales::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_507_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) prescales::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StNpeRead_Cint_507_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   prescales* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new prescales(*(prescales*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef prescales G__Tprescales;
static int G__StNpeRead_Cint_507_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (prescales*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((prescales*) (soff+(sizeof(prescales)*i)))->~G__Tprescales();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (prescales*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((prescales*) (soff))->~G__Tprescales();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StNpeRead_Cint_507_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   prescales* dest = (prescales*) G__getstructoffset();
   *dest = *(prescales*) libp->para[0].ref;
   const prescales& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StNpeRead */
static int G__StNpeRead_Cint_508_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StNpeRead* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StNpeRead((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StNpeRead((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StNpeRead_CintLN_StNpeRead));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->bookObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->read(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->writeObjects();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->isTrgTrack((StDmesonTrack*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->SetRunID_VPD();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->isBadRun((StDmesonEvent*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->isGoodEvent((StDmesonEvent*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->isHotTower((StDmesonTrack*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->isElectron((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_event_hist((StDmesonEvent*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_pair_hist_high_pt((Int_t) G__int(libp->para[0]), (StElectronPair*) G__int(libp->para[1])
, (StDmesonTrack*) G__int(libp->para[2]), (StDmesonTrack*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_pair_hist_low_pt((Int_t) G__int(libp->para[0]), (StElectronPair*) G__int(libp->para[1])
, (StDmesonTrack*) G__int(libp->para[2]), (StDmesonTrack*) G__int(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_Inclusive_hist((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_PhotonicE_hist((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->zFillHists((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->zFill_Inclusive((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->zFill_Photonic((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Do_run_QA((StDmesonEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_RunQA((Int_t) G__int(libp->para[0]), (StDmesonEvent*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Fill_Kaon_Kaon((StDmesonEvent*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_GoodTrack((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_loose_track_qaulity((StDmesonTrack*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_Pt_Eta((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_nsigmaE((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_poe((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_EMC((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_Match_EMC_Dphi((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_Match_EMC_Dz((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_Tof_Match((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_Tof((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_ADC((Int_t) G__int(libp->para[0]), (StDmesonTrack*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->is_EMC_Track((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_hTrack((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StNpeRead*) G__getstructoffset())->getHadronWt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StNpeRead*) G__getstructoffset())->readEff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->addToHadBuffer((StDmesonTrack*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->computeMixedEvents((StDmesonTrack*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_cut_nsigmaPi((StDmesonTrack*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((StNpeRead*) G__getstructoffset())->correct_dPhi((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((StNpeRead*) G__getstructoffset())->getTrgEff((Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StNpeRead*) G__getstructoffset())->pass_dEta((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StNpeRead::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StNpeRead::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StNpeRead::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StNpeRead::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StNpeRead*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StNpeRead*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StNpeRead::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StNpeRead::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StNpeRead::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StNpeRead_Cint_508_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StNpeRead::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StNpeRead G__TStNpeRead;
static int G__StNpeRead_Cint_508_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StNpeRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StNpeRead*) (soff+(sizeof(StNpeRead)*i)))->~G__TStNpeRead();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StNpeRead*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StNpeRead*) (soff))->~G__TStNpeRead();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* prescales */

/* StNpeRead */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStNpeRead_Cint {
 public:
  G__Sizep2memfuncStNpeRead_Cint(): p(&G__Sizep2memfuncStNpeRead_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStNpeRead_Cint::*p)();
};

size_t G__get_sizep2memfuncStNpeRead_Cint()
{
  G__Sizep2memfuncStNpeRead_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStNpeRead_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales))) {
     prescales *G__Lderived;
     G__Lderived=(prescales*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales),G__get_linked_tagnum(&G__StNpeRead_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales),G__get_linked_tagnum(&G__StNpeRead_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStNpeRead_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Int_t>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vecPrescales",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vecPrescales>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<float,allocator<float> >>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<float,allocator<float> >,less<int>>",117,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* prescales */
static void G__setup_memvarprescales(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales));
   { prescales *p; p=(prescales*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vecPrescales>"),-1,4,"mTable=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator),-1,-1,4,"mLastQuery=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales),-1,-2,4,"mInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StNpeRead */
static void G__setup_memvarStNpeRead(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_StNpeRead));
   { StNpeRead *p; p=(StNpeRead*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TFile),-1,-1,4,"mOutputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_StDmesonEvent),-1,-1,4,"mNpeEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales),-1,-1,4,"mPrescales=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ifstream"),-1,4,"file_runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,4,"outfile=",0,"(\"runID.txt\",ios::out|ios::app);");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"runID_List=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"runIDPico=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"ADC_nocut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"ADC_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1Vz_VPDVz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1Vz_VPD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1VzVPD_VPD=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1Vz_VPDPS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1PtAllTracks[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1PtETracks[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2InvMassPtAll[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2InvMassPtE[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2InvMassPtUS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2InvMassPtLS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2nSigmaPionPt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3nTracksZdcx[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3nTracksZdcxUS[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3nTracksZdcxLS[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3nTracksZdcxHad[4][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2PtEZdcxHad[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2PtEZdcx[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2PtEZdcxUS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH2F),-1,-1,4,"mh2PtEZdcxLS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiIncl[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotLS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotUS[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotUSNP[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotLSNP[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotInclNP[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiInclWt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotLSWt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiPhotUSWt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiHadHad[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3DelPhiHadHadWt[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1PtHadTracks[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedDelPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedDelEta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedEtaPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedDelPhiWt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedDelEtaWt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH3F),-1,-1,4,"mh3MixedEtaPhiWt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1delPhiIncl=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1delPhiUS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1delPhiLS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1delPhiHad=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TH1F),-1,-1,4,"mh1TrigCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"writeRunQA=",0,"flags for write control");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"writeDataQA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"writeXiaozhiHists=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"effPars[20][3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TF1),-1,-1,4,"fEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pi=",0,"just to make it a single definition");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numPtBins=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"maxBufferSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isAddedToBuffer=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"hadPhi[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"hadEta[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"hadPt[70]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStNpeRead_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncprescales(void) {
   /* prescales */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales));
   G__memfunc_setup("ReadList",792,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prescales",962,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrescale",1103,G__StNpeRead_Cint_507_0_3, 102, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - run i - - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfRuns",1510,G__StNpeRead_Cint_507_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetListOfRuns",1305,G__StNpeRead_Cint_507_0_5, 73, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunIndex",813,G__StNpeRead_Cint_507_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunExists",949,G__StNpeRead_Cint_507_0_7, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPrescalesHist",1729,G__StNpeRead_Cint_507_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - - i - - 0 - trg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__StNpeRead_Cint_507_0_9, 85, G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (prescales* (*)())(&prescales::Instance), 0);
   G__memfunc_setup("Class",502,G__StNpeRead_Cint_507_0_10, 85, G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&prescales::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StNpeRead_Cint_507_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&prescales::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StNpeRead_Cint_507_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&prescales::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StNpeRead_Cint_507_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&prescales::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StNpeRead_Cint_507_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StNpeRead_Cint_507_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&prescales::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StNpeRead_Cint_507_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&prescales::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StNpeRead_Cint_507_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&prescales::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StNpeRead_Cint_507_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&prescales::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("prescales", 962, G__StNpeRead_Cint_507_0_22, (int) ('i'), G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales), -1, 0, 1, 1, 1, 0, "u 'prescales' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~prescales", 1088, G__StNpeRead_Cint_507_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StNpeRead_Cint_507_0_24, (int) ('u'), G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales), -1, 1, 1, 1, 1, 0, "u 'prescales' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStNpeRead(void) {
   /* StNpeRead */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_StNpeRead));
   G__memfunc_setup("StNpeRead",870,G__StNpeRead_Cint_508_0_1, 105, G__get_linked_tagnum(&G__StNpeRead_CintLN_StNpeRead), -1, 0, 1, 1, 1, 0, "C - - 10 - outName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookObjects",1141,G__StNpeRead_Cint_508_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__StNpeRead_Cint_508_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeObjects",1269,G__StNpeRead_Cint_508_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTrgTrack",1022,G__StNpeRead_Cint_508_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'StDmesonTrack' - 0 - - r - 'UShort_t' 0 - htTrg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunID_VPD",1079,G__StNpeRead_Cint_508_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBadRun",792,G__StNpeRead_Cint_508_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodEvent",1127,G__StNpeRead_Cint_508_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'StDmesonEvent' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHotTower",1048,G__StNpeRead_Cint_508_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'StDmesonTrack' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isElectron",1048,G__StNpeRead_Cint_508_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_event_hist",1567,G__StNpeRead_Cint_508_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'StDmesonEvent' - 0 - - i - 'Int_t' 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_pair_hist_high_pt",2283,G__StNpeRead_Cint_508_0_12, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StElectronPair' - 0 - - "
"U 'StDmesonTrack' - 0 - - U 'StDmesonTrack' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_pair_hist_low_pt",2205,G__StNpeRead_Cint_508_0_13, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StElectronPair' - 0 - - "
"U 'StDmesonTrack' - 0 - - U 'StDmesonTrack' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_Inclusive_hist",1967,G__StNpeRead_Cint_508_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_PhotonicE_hist",1926,G__StNpeRead_Cint_508_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zFillHists",1036,G__StNpeRead_Cint_508_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zFill_Inclusive",1554,G__StNpeRead_Cint_508_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zFill_Photonic",1444,G__StNpeRead_Cint_508_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - - "
"d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Do_run_QA",856,G__StNpeRead_Cint_508_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StDmesonEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_RunQA",941,G__StNpeRead_Cint_508_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill_Kaon_Kaon",1367,G__StNpeRead_Cint_508_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StDmesonEvent' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_GoodTrack",1855,G__StNpeRead_Cint_508_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_loose_track_qaulity",2580,G__StNpeRead_Cint_508_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'StDmesonTrack' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_Pt_Eta",1534,G__StNpeRead_Cint_508_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_nsigmaE",1669,G__StNpeRead_Cint_508_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_poe",1285,G__StNpeRead_Cint_508_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_EMC",1174,G__StNpeRead_Cint_508_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_Match_EMC_Dphi",2246,G__StNpeRead_Cint_508_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_Match_EMC_Dz",2047,G__StNpeRead_Cint_508_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_Tof_Match",1846,G__StNpeRead_Cint_508_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_Tof",1258,G__StNpeRead_Cint_508_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_ADC",1161,G__StNpeRead_Cint_508_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("is_EMC_Track",1124,G__StNpeRead_Cint_508_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", "Just check nPhi, nEta", (void*) NULL, 0);
   G__memfunc_setup("pass_cut_hTrack",1566,G__StNpeRead_Cint_508_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", "check for hadrons tracks", (void*) NULL, 0);
   G__memfunc_setup("getHadronWt",1127,G__StNpeRead_Cint_508_0_35, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readEff",685,G__StNpeRead_Cint_508_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "Read in Efficiencies from exterior files", (void*) NULL, 0);
   G__memfunc_setup("addToHadBuffer",1363,G__StNpeRead_Cint_508_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StDmesonTrack' - 0 - - d - 'Double_t' 0 - -", "Create a buffer for hadrons", (void*) NULL, 0);
   G__memfunc_setup("computeMixedEvents",1897,G__StNpeRead_Cint_508_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'StDmesonTrack' - 0 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pass_cut_nsigmaPi",1785,G__StNpeRead_Cint_508_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'StDmesonTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("correct_dPhi",1238,G__StNpeRead_Cint_508_0_40, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - -", "controls wrap around, so I only have to change values in one place", (void*) NULL, 0);
   G__memfunc_setup("getTrgEff",894,G__StNpeRead_Cint_508_0_41, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - d - 'Double_t' 0 - -", "Get electron trigger efficiency from XB embedding", (void*) NULL, 0);
   G__memfunc_setup("pass_dEta",916,G__StNpeRead_Cint_508_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - -", "Make delta Eta cut", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StNpeRead_Cint_508_0_43, 85, G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StNpeRead::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StNpeRead_Cint_508_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StNpeRead::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StNpeRead_Cint_508_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StNpeRead::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StNpeRead_Cint_508_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StNpeRead::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__StNpeRead_Cint_508_0_47, 85, G__get_linked_tagnum(&G__StNpeRead_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StNpeRead_Cint_508_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StNpeRead_Cint_508_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StNpeRead_Cint_508_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StNpeRead_Cint_508_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StNpeRead::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StNpeRead_Cint_508_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StNpeRead::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StNpeRead_Cint_508_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StNpeRead::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StNpeRead_Cint_508_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StNpeRead::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~StNpeRead", 996, G__StNpeRead_Cint_508_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStNpeRead_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStNpeRead_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStNpeRead_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StNpeRead_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ifstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_StDmesonTrack = { "StDmesonTrack" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_StElectronPair = { "StElectronPair" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_StDmesonEvent = { "StDmesonEvent" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_prescales = { "prescales" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_StNpeRead = { "StNpeRead" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR = { "map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >" , 99 , -1 };
G__linked_taginfo G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<int,vector<float,allocator<float> >,less<int>,allocator<pair<const int,vector<float,allocator<float> > > > >::iterator" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStNpeRead_Cint() {
  G__StNpeRead_CintLN_TClass.tagnum = -1 ;
  G__StNpeRead_CintLN_TBuffer.tagnum = -1 ;
  G__StNpeRead_CintLN_TMemberInspector.tagnum = -1 ;
  G__StNpeRead_CintLN_TObject.tagnum = -1 ;
  G__StNpeRead_CintLN_TNamed.tagnum = -1 ;
  G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StNpeRead_CintLN_TString.tagnum = -1 ;
  G__StNpeRead_CintLN_StDmesonTrack.tagnum = -1 ;
  G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StNpeRead_CintLN_StElectronPair.tagnum = -1 ;
  G__StNpeRead_CintLN_StDmesonEvent.tagnum = -1 ;
  G__StNpeRead_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StNpeRead_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StNpeRead_CintLN_TF1.tagnum = -1 ;
  G__StNpeRead_CintLN_TH1F.tagnum = -1 ;
  G__StNpeRead_CintLN_TH2F.tagnum = -1 ;
  G__StNpeRead_CintLN_TH3F.tagnum = -1 ;
  G__StNpeRead_CintLN_TFile.tagnum = -1 ;
  G__StNpeRead_CintLN_prescales.tagnum = -1 ;
  G__StNpeRead_CintLN_StNpeRead.tagnum = -1 ;
  G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStNpeRead_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_basic_ifstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TString);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_StDmesonTrack);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_StElectronPair);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_StDmesonEvent);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TF1);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TH2F);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TH3F);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_TFile);
   G__tagtable_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_prescales),sizeof(prescales),-1,324864,(char*)NULL,G__setup_memvarprescales,G__setup_memfuncprescales);
   G__tagtable_setup(G__get_linked_tagnum(&G__StNpeRead_CintLN_StNpeRead),sizeof(StNpeRead),-1,295936,(char*)NULL,G__setup_memvarStNpeRead,G__setup_memfuncStNpeRead);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StNpeRead_CintLN_maplEintcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator);
}
extern "C" void G__cpp_setupStNpeRead_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStNpeRead_Cint()");
  G__set_cpp_environmentStNpeRead_Cint();
  G__cpp_setup_tagtableStNpeRead_Cint();

  G__cpp_setup_inheritanceStNpeRead_Cint();

  G__cpp_setup_typetableStNpeRead_Cint();

  G__cpp_setup_memvarStNpeRead_Cint();

  G__cpp_setup_memfuncStNpeRead_Cint();
  G__cpp_setup_globalStNpeRead_Cint();
  G__cpp_setup_funcStNpeRead_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStNpeRead_Cint();
  return;
}
class G__cpp_setup_initStNpeRead_Cint {
  public:
    G__cpp_setup_initStNpeRead_Cint() { G__add_setup_func("StNpeRead_Cint",(G__incsetup)(&G__cpp_setupStNpeRead_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStNpeRead_Cint() { G__remove_setup_func("StNpeRead_Cint"); }
};
G__cpp_setup_initStNpeRead_Cint G__cpp_setup_initializerStNpeRead_Cint;

