//
// File generated by rootcint at Tue Aug  4 10:33:03 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StDmesonMaker_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StDmesonTrack_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StDmesonTrack(void *p = 0);
   static void *newArray_StDmesonTrack(Long_t size, void *p);
   static void delete_StDmesonTrack(void *p);
   static void deleteArray_StDmesonTrack(void *p);
   static void destruct_StDmesonTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StDmesonTrack*)
   {
      ::StDmesonTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StDmesonTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StDmesonTrack", ::StDmesonTrack::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StDmesonTrack.h", 11,
                  typeid(::StDmesonTrack), DefineBehavior(ptr, ptr),
                  &::StDmesonTrack::Dictionary, isa_proxy, 4,
                  sizeof(::StDmesonTrack) );
      instance.SetNew(&new_StDmesonTrack);
      instance.SetNewArray(&newArray_StDmesonTrack);
      instance.SetDelete(&delete_StDmesonTrack);
      instance.SetDeleteArray(&deleteArray_StDmesonTrack);
      instance.SetDestructor(&destruct_StDmesonTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StDmesonTrack*)
   {
      return GenerateInitInstanceLocal((::StDmesonTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StDmesonTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StKaonPion_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StKaonPion(void *p = 0);
   static void *newArray_StKaonPion(Long_t size, void *p);
   static void delete_StKaonPion(void *p);
   static void deleteArray_StKaonPion(void *p);
   static void destruct_StKaonPion(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StKaonPion*)
   {
      ::StKaonPion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StKaonPion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StKaonPion", ::StKaonPion::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StKaonPion.h", 12,
                  typeid(::StKaonPion), DefineBehavior(ptr, ptr),
                  &::StKaonPion::Dictionary, isa_proxy, 4,
                  sizeof(::StKaonPion) );
      instance.SetNew(&new_StKaonPion);
      instance.SetNewArray(&newArray_StKaonPion);
      instance.SetDelete(&delete_StKaonPion);
      instance.SetDeleteArray(&deleteArray_StKaonPion);
      instance.SetDestructor(&destruct_StKaonPion);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StKaonPion*)
   {
      return GenerateInitInstanceLocal((::StKaonPion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StKaonPion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StKaonPionPion_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StKaonPionPion(void *p = 0);
   static void *newArray_StKaonPionPion(Long_t size, void *p);
   static void delete_StKaonPionPion(void *p);
   static void deleteArray_StKaonPionPion(void *p);
   static void destruct_StKaonPionPion(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StKaonPionPion*)
   {
      ::StKaonPionPion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StKaonPionPion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StKaonPionPion", ::StKaonPionPion::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StKaonPionPion.h", 13,
                  typeid(::StKaonPionPion), DefineBehavior(ptr, ptr),
                  &::StKaonPionPion::Dictionary, isa_proxy, 4,
                  sizeof(::StKaonPionPion) );
      instance.SetNew(&new_StKaonPionPion);
      instance.SetNewArray(&newArray_StKaonPionPion);
      instance.SetDelete(&delete_StKaonPionPion);
      instance.SetDeleteArray(&deleteArray_StKaonPionPion);
      instance.SetDestructor(&destruct_StKaonPionPion);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StKaonPionPion*)
   {
      return GenerateInitInstanceLocal((::StKaonPionPion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StKaonPionPion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StKaonKaon_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StKaonKaon(void *p = 0);
   static void *newArray_StKaonKaon(Long_t size, void *p);
   static void delete_StKaonKaon(void *p);
   static void deleteArray_StKaonKaon(void *p);
   static void destruct_StKaonKaon(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StKaonKaon*)
   {
      ::StKaonKaon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StKaonKaon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StKaonKaon", ::StKaonKaon::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StKaonKaon.h", 12,
                  typeid(::StKaonKaon), DefineBehavior(ptr, ptr),
                  &::StKaonKaon::Dictionary, isa_proxy, 4,
                  sizeof(::StKaonKaon) );
      instance.SetNew(&new_StKaonKaon);
      instance.SetNewArray(&newArray_StKaonKaon);
      instance.SetDelete(&delete_StKaonKaon);
      instance.SetDeleteArray(&deleteArray_StKaonKaon);
      instance.SetDestructor(&destruct_StKaonKaon);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StKaonKaon*)
   {
      return GenerateInitInstanceLocal((::StKaonKaon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StKaonKaon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StKaonKaonPion_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StKaonKaonPion(void *p = 0);
   static void *newArray_StKaonKaonPion(Long_t size, void *p);
   static void delete_StKaonKaonPion(void *p);
   static void deleteArray_StKaonKaonPion(void *p);
   static void destruct_StKaonKaonPion(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StKaonKaonPion*)
   {
      ::StKaonKaonPion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StKaonKaonPion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StKaonKaonPion", ::StKaonKaonPion::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StKaonKaonPion.h", 13,
                  typeid(::StKaonKaonPion), DefineBehavior(ptr, ptr),
                  &::StKaonKaonPion::Dictionary, isa_proxy, 4,
                  sizeof(::StKaonKaonPion) );
      instance.SetNew(&new_StKaonKaonPion);
      instance.SetNewArray(&newArray_StKaonKaonPion);
      instance.SetDelete(&delete_StKaonKaonPion);
      instance.SetDeleteArray(&deleteArray_StKaonKaonPion);
      instance.SetDestructor(&destruct_StKaonKaonPion);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StKaonKaonPion*)
   {
      return GenerateInitInstanceLocal((::StKaonKaonPion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StKaonKaonPion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StElectronPair_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StElectronPair(void *p = 0);
   static void *newArray_StElectronPair(Long_t size, void *p);
   static void delete_StElectronPair(void *p);
   static void deleteArray_StElectronPair(void *p);
   static void destruct_StElectronPair(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StElectronPair*)
   {
      ::StElectronPair *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StElectronPair >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StElectronPair", ::StElectronPair::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StElectronPair.h", 11,
                  typeid(::StElectronPair), DefineBehavior(ptr, ptr),
                  &::StElectronPair::Dictionary, isa_proxy, 4,
                  sizeof(::StElectronPair) );
      instance.SetNew(&new_StElectronPair);
      instance.SetNewArray(&newArray_StElectronPair);
      instance.SetDelete(&delete_StElectronPair);
      instance.SetDeleteArray(&deleteArray_StElectronPair);
      instance.SetDestructor(&destruct_StElectronPair);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StElectronPair*)
   {
      return GenerateInitInstanceLocal((::StElectronPair*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StElectronPair*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StDmesonEvent_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StDmesonEvent(void *p = 0);
   static void *newArray_StDmesonEvent(Long_t size, void *p);
   static void delete_StDmesonEvent(void *p);
   static void deleteArray_StDmesonEvent(void *p);
   static void destruct_StDmesonEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StDmesonEvent*)
   {
      ::StDmesonEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StDmesonEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StDmesonEvent", ::StDmesonEvent::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StDmesonEvent.h", 17,
                  typeid(::StDmesonEvent), DefineBehavior(ptr, ptr),
                  &::StDmesonEvent::Dictionary, isa_proxy, 4,
                  sizeof(::StDmesonEvent) );
      instance.SetNew(&new_StDmesonEvent);
      instance.SetNewArray(&newArray_StDmesonEvent);
      instance.SetDelete(&delete_StDmesonEvent);
      instance.SetDeleteArray(&deleteArray_StDmesonEvent);
      instance.SetDestructor(&destruct_StDmesonEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StDmesonEvent*)
   {
      return GenerateInitInstanceLocal((::StDmesonEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StDmesonEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void StDmesonMaker_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_StDmesonMaker(void *p);
   static void deleteArray_StDmesonMaker(void *p);
   static void destruct_StDmesonMaker(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StDmesonMaker*)
   {
      ::StDmesonMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StDmesonMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StDmesonMaker", ::StDmesonMaker::Class_Version(), ".sl64_gcc447/obj/StRoot/StDmesonMaker/StDmesonMaker.h", 15,
                  typeid(::StDmesonMaker), DefineBehavior(ptr, ptr),
                  &::StDmesonMaker::Dictionary, isa_proxy, 4,
                  sizeof(::StDmesonMaker) );
      instance.SetDelete(&delete_StDmesonMaker);
      instance.SetDeleteArray(&deleteArray_StDmesonMaker);
      instance.SetDestructor(&destruct_StDmesonMaker);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StDmesonMaker*)
   {
      return GenerateInitInstanceLocal((::StDmesonMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StDmesonMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StDmesonTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StDmesonTrack::Class_Name()
{
   return "StDmesonTrack";
}

//______________________________________________________________________________
const char *StDmesonTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StDmesonTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StDmesonTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StDmesonTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StKaonPion::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StKaonPion::Class_Name()
{
   return "StKaonPion";
}

//______________________________________________________________________________
const char *StKaonPion::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonPion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StKaonPion::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonPion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StKaonPion::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonPion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StKaonPion::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonPion*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StKaonPionPion::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StKaonPionPion::Class_Name()
{
   return "StKaonPionPion";
}

//______________________________________________________________________________
const char *StKaonPionPion::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonPionPion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StKaonPionPion::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonPionPion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StKaonPionPion::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonPionPion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StKaonPionPion::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonPionPion*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StKaonKaon::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StKaonKaon::Class_Name()
{
   return "StKaonKaon";
}

//______________________________________________________________________________
const char *StKaonKaon::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StKaonKaon::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StKaonKaon::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StKaonKaon::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaon*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StKaonKaonPion::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StKaonKaonPion::Class_Name()
{
   return "StKaonKaonPion";
}

//______________________________________________________________________________
const char *StKaonKaonPion::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaonPion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StKaonKaonPion::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaonPion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StKaonKaonPion::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaonPion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StKaonKaonPion::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StKaonKaonPion*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StElectronPair::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StElectronPair::Class_Name()
{
   return "StElectronPair";
}

//______________________________________________________________________________
const char *StElectronPair::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StElectronPair*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StElectronPair::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StElectronPair*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StElectronPair::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StElectronPair*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StElectronPair::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StElectronPair*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StDmesonEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StDmesonEvent::Class_Name()
{
   return "StDmesonEvent";
}

//______________________________________________________________________________
const char *StDmesonEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StDmesonEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StDmesonEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StDmesonEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *StDmesonMaker::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StDmesonMaker::Class_Name()
{
   return "StDmesonMaker";
}

//______________________________________________________________________________
const char *StDmesonMaker::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StDmesonMaker::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StDmesonMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StDmesonMaker::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StDmesonMaker::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StDmesonMaker*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void StDmesonEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class StDmesonEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StDmesonEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(StDmesonEvent::Class(),this);
   }
}

//______________________________________________________________________________
void StDmesonEvent::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StDmesonEvent.
      TClass *R__cl = ::StDmesonEvent::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mRunId", &mRunId);
      R__insp.Inspect(R__cl, R__parent, "mEventId", &mEventId);
      R__insp.Inspect(R__cl, R__parent, "mPrimaryVertex", &mPrimaryVertex);
      mPrimaryVertex.ShowMembers(R__insp, strcat(R__parent,"mPrimaryVertex.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mTriggerWord", &mTriggerWord);
      R__insp.Inspect(R__cl, R__parent, "mRefMultNeg", &mRefMultNeg);
      R__insp.Inspect(R__cl, R__parent, "mRefMultPos", &mRefMultPos);
      R__insp.Inspect(R__cl, R__parent, "mVzVpd", &mVzVpd);
      R__insp.Inspect(R__cl, R__parent, "mZDCx", &mZDCx);
      R__insp.Inspect(R__cl, R__parent, "mBBCx", &mBBCx);
      R__insp.Inspect(R__cl, R__parent, "mbTofTrayMultiplicity", &mbTofTrayMultiplicity);
      R__insp.Inspect(R__cl, R__parent, "mNumberOfGlobalTracks", &mNumberOfGlobalTracks);
      R__insp.Inspect(R__cl, R__parent, "mRanking", &mRanking);
      R__insp.Inspect(R__cl, R__parent, "mNBEMCMatch", &mNBEMCMatch);
      R__insp.Inspect(R__cl, R__parent, "mNTracks", &mNTracks);
      R__insp.Inspect(R__cl, R__parent, "mNKaonPion", &mNKaonPion);
      R__insp.Inspect(R__cl, R__parent, "mNKaonPionPion", &mNKaonPionPion);
      R__insp.Inspect(R__cl, R__parent, "mNKaonKaon", &mNKaonKaon);
      R__insp.Inspect(R__cl, R__parent, "mNKaonKaonPion", &mNKaonKaonPion);
      R__insp.Inspect(R__cl, R__parent, "mNElectronPair", &mNElectronPair);
      R__insp.Inspect(R__cl, R__parent, "*mTracks", &mTracks);
      R__insp.Inspect(R__cl, R__parent, "*mKaonPion", &mKaonPion);
      R__insp.Inspect(R__cl, R__parent, "*mKaonPionPion", &mKaonPionPion);
      R__insp.Inspect(R__cl, R__parent, "*mKaonKaon", &mKaonKaon);
      R__insp.Inspect(R__cl, R__parent, "*mKaonKaonPion", &mKaonKaonPion);
      R__insp.Inspect(R__cl, R__parent, "*mElectronPair", &mElectronPair);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StDmesonEvent(void *p) {
      return  p ? new(p) ::StDmesonEvent : new ::StDmesonEvent;
   }
   static void *newArray_StDmesonEvent(Long_t nElements, void *p) {
      return p ? new(p) ::StDmesonEvent[nElements] : new ::StDmesonEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_StDmesonEvent(void *p) {
      delete ((::StDmesonEvent*)p);
   }
   static void deleteArray_StDmesonEvent(void *p) {
      delete [] ((::StDmesonEvent*)p);
   }
   static void destruct_StDmesonEvent(void *p) {
      typedef ::StDmesonEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StDmesonEvent

//______________________________________________________________________________
void StDmesonMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class StDmesonMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StDmesonMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(StDmesonMaker::Class(),this);
   }
}

//______________________________________________________________________________
void StDmesonMaker::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StDmesonMaker.
      TClass *R__cl = ::StDmesonMaker::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*mPicoDstMaker", &mPicoDstMaker);
      R__insp.Inspect(R__cl, R__parent, "*mPicoDst", &mPicoDst);
      R__insp.Inspect(R__cl, R__parent, "*mPicoEvent", &mPicoEvent);
      R__insp.Inspect(R__cl, R__parent, "*mEmcGeom", &mEmcGeom);
      R__insp.Inspect(R__cl, R__parent, "*mOutputFile", &mOutputFile);
      R__insp.Inspect(R__cl, R__parent, "*mTree", &mTree);
      R__insp.Inspect(R__cl, R__parent, "*mDmesonEvent", &mDmesonEvent);
      StMaker::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_StDmesonMaker(void *p) {
      delete ((::StDmesonMaker*)p);
   }
   static void deleteArray_StDmesonMaker(void *p) {
      delete [] ((::StDmesonMaker*)p);
   }
   static void destruct_StDmesonMaker(void *p) {
      typedef ::StDmesonMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StDmesonMaker

//______________________________________________________________________________
void StDmesonTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class StDmesonTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StDmesonTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(StDmesonTrack::Class(),this);
   }
}

//______________________________________________________________________________
void StDmesonTrack::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StDmesonTrack.
      TClass *R__cl = ::StDmesonTrack::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mPMomentum", &mPMomentum);
      mPMomentum.ShowMembers(R__insp, strcat(R__parent,"mPMomentum.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mGMomentum", &mGMomentum);
      mGMomentum.ShowMembers(R__insp, strcat(R__parent,"mGMomentum.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mGDca", &mGDca);
      R__insp.Inspect(R__cl, R__parent, "mDedx", &mDedx);
      R__insp.Inspect(R__cl, R__parent, "mNHitsFit", &mNHitsFit);
      R__insp.Inspect(R__cl, R__parent, "mNHitsMax", &mNHitsMax);
      R__insp.Inspect(R__cl, R__parent, "mNHitsDedx", &mNHitsDedx);
      R__insp.Inspect(R__cl, R__parent, "mNSigmaPion", &mNSigmaPion);
      R__insp.Inspect(R__cl, R__parent, "mNSigmaKaon", &mNSigmaKaon);
      R__insp.Inspect(R__cl, R__parent, "mNSigmaProton", &mNSigmaProton);
      R__insp.Inspect(R__cl, R__parent, "mNSigmaElectron", &mNSigmaElectron);
      R__insp.Inspect(R__cl, R__parent, "mFirstTpcPointR", &mFirstTpcPointR);
      R__insp.Inspect(R__cl, R__parent, "mBTofMatchFlag", &mBTofMatchFlag);
      R__insp.Inspect(R__cl, R__parent, "mBTofBeta", &mBTofBeta);
      R__insp.Inspect(R__cl, R__parent, "mBTofYLocal", &mBTofYLocal);
      R__insp.Inspect(R__cl, R__parent, "mBTOWADC0", &mBTOWADC0);
      R__insp.Inspect(R__cl, R__parent, "mBTOWE0", &mBTOWE0);
      R__insp.Inspect(R__cl, R__parent, "mBTOWE", &mBTOWE);
      R__insp.Inspect(R__cl, R__parent, "mBEMCDistZ", &mBEMCDistZ);
      R__insp.Inspect(R__cl, R__parent, "mBEMCDistPhi", &mBEMCDistPhi);
      R__insp.Inspect(R__cl, R__parent, "mBSMDNEta", &mBSMDNEta);
      R__insp.Inspect(R__cl, R__parent, "mBSMDNPhi", &mBSMDNPhi);
      R__insp.Inspect(R__cl, R__parent, "mBTOWId", &mBTOWId);
      R__insp.Inspect(R__cl, R__parent, "mTrgTowId", &mTrgTowId);
      R__insp.Inspect(R__cl, R__parent, "mTrgTowDSMADC", &mTrgTowDSMADC);
      R__insp.Inspect(R__cl, R__parent, "mTrgTowADC", &mTrgTowADC);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StDmesonTrack(void *p) {
      return  p ? new(p) ::StDmesonTrack : new ::StDmesonTrack;
   }
   static void *newArray_StDmesonTrack(Long_t nElements, void *p) {
      return p ? new(p) ::StDmesonTrack[nElements] : new ::StDmesonTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_StDmesonTrack(void *p) {
      delete ((::StDmesonTrack*)p);
   }
   static void deleteArray_StDmesonTrack(void *p) {
      delete [] ((::StDmesonTrack*)p);
   }
   static void destruct_StDmesonTrack(void *p) {
      typedef ::StDmesonTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StDmesonTrack

//______________________________________________________________________________
void StElectronPair::Streamer(TBuffer &R__b)
{
   // Stream an object of class StElectronPair.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StElectronPair::Class(),this);
   } else {
      R__b.WriteClassBuffer(StElectronPair::Class(),this);
   }
}

//______________________________________________________________________________
void StElectronPair::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StElectronPair.
      TClass *R__cl = ::StElectronPair::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mElectronId", &mElectronId);
      R__insp.Inspect(R__cl, R__parent, "mPartnerId", &mPartnerId);
      R__insp.Inspect(R__cl, R__parent, "mM", &mM);
      R__insp.Inspect(R__cl, R__parent, "mPairDca", &mPairDca);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StElectronPair(void *p) {
      return  p ? new(p) ::StElectronPair : new ::StElectronPair;
   }
   static void *newArray_StElectronPair(Long_t nElements, void *p) {
      return p ? new(p) ::StElectronPair[nElements] : new ::StElectronPair[nElements];
   }
   // Wrapper around operator delete
   static void delete_StElectronPair(void *p) {
      delete ((::StElectronPair*)p);
   }
   static void deleteArray_StElectronPair(void *p) {
      delete [] ((::StElectronPair*)p);
   }
   static void destruct_StElectronPair(void *p) {
      typedef ::StElectronPair current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StElectronPair

//______________________________________________________________________________
void StKaonKaon::Streamer(TBuffer &R__b)
{
   // Stream an object of class StKaonKaon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StKaonKaon::Class(),this);
   } else {
      R__b.WriteClassBuffer(StKaonKaon::Class(),this);
   }
}

//______________________________________________________________________________
void StKaonKaon::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StKaonKaon.
      TClass *R__cl = ::StKaonKaon::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mKaon1Id", &mKaon1Id);
      R__insp.Inspect(R__cl, R__parent, "mKaon2Id", &mKaon2Id);
      R__insp.Inspect(R__cl, R__parent, "mM", &mM);
      R__insp.Inspect(R__cl, R__parent, "mPt", &mPt);
      R__insp.Inspect(R__cl, R__parent, "mEta", &mEta);
      R__insp.Inspect(R__cl, R__parent, "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__parent, "mOpenAngle", &mOpenAngle);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StKaonKaon(void *p) {
      return  p ? new(p) ::StKaonKaon : new ::StKaonKaon;
   }
   static void *newArray_StKaonKaon(Long_t nElements, void *p) {
      return p ? new(p) ::StKaonKaon[nElements] : new ::StKaonKaon[nElements];
   }
   // Wrapper around operator delete
   static void delete_StKaonKaon(void *p) {
      delete ((::StKaonKaon*)p);
   }
   static void deleteArray_StKaonKaon(void *p) {
      delete [] ((::StKaonKaon*)p);
   }
   static void destruct_StKaonKaon(void *p) {
      typedef ::StKaonKaon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StKaonKaon

//______________________________________________________________________________
void StKaonKaonPion::Streamer(TBuffer &R__b)
{
   // Stream an object of class StKaonKaonPion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StKaonKaonPion::Class(),this);
   } else {
      R__b.WriteClassBuffer(StKaonKaonPion::Class(),this);
   }
}

//______________________________________________________________________________
void StKaonKaonPion::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StKaonKaonPion.
      TClass *R__cl = ::StKaonKaonPion::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mKaonKaonId", &mKaonKaonId);
      R__insp.Inspect(R__cl, R__parent, "mPionId", &mPionId);
      R__insp.Inspect(R__cl, R__parent, "mM", &mM);
      R__insp.Inspect(R__cl, R__parent, "mPt", &mPt);
      R__insp.Inspect(R__cl, R__parent, "mEta", &mEta);
      R__insp.Inspect(R__cl, R__parent, "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__parent, "mCosThetaStarPion", &mCosThetaStarPion);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StKaonKaonPion(void *p) {
      return  p ? new(p) ::StKaonKaonPion : new ::StKaonKaonPion;
   }
   static void *newArray_StKaonKaonPion(Long_t nElements, void *p) {
      return p ? new(p) ::StKaonKaonPion[nElements] : new ::StKaonKaonPion[nElements];
   }
   // Wrapper around operator delete
   static void delete_StKaonKaonPion(void *p) {
      delete ((::StKaonKaonPion*)p);
   }
   static void deleteArray_StKaonKaonPion(void *p) {
      delete [] ((::StKaonKaonPion*)p);
   }
   static void destruct_StKaonKaonPion(void *p) {
      typedef ::StKaonKaonPion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StKaonKaonPion

//______________________________________________________________________________
void StKaonPion::Streamer(TBuffer &R__b)
{
   // Stream an object of class StKaonPion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StKaonPion::Class(),this);
   } else {
      R__b.WriteClassBuffer(StKaonPion::Class(),this);
   }
}

//______________________________________________________________________________
void StKaonPion::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StKaonPion.
      TClass *R__cl = ::StKaonPion::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mKaonId", &mKaonId);
      R__insp.Inspect(R__cl, R__parent, "mPionId", &mPionId);
      R__insp.Inspect(R__cl, R__parent, "mM", &mM);
      R__insp.Inspect(R__cl, R__parent, "mPt", &mPt);
      R__insp.Inspect(R__cl, R__parent, "mEta", &mEta);
      R__insp.Inspect(R__cl, R__parent, "mPhi", &mPhi);
      R__insp.Inspect(R__cl, R__parent, "mOpenAngle", &mOpenAngle);
      R__insp.Inspect(R__cl, R__parent, "mCosThetaStar", &mCosThetaStar);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StKaonPion(void *p) {
      return  p ? new(p) ::StKaonPion : new ::StKaonPion;
   }
   static void *newArray_StKaonPion(Long_t nElements, void *p) {
      return p ? new(p) ::StKaonPion[nElements] : new ::StKaonPion[nElements];
   }
   // Wrapper around operator delete
   static void delete_StKaonPion(void *p) {
      delete ((::StKaonPion*)p);
   }
   static void deleteArray_StKaonPion(void *p) {
      delete [] ((::StKaonPion*)p);
   }
   static void destruct_StKaonPion(void *p) {
      typedef ::StKaonPion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StKaonPion

//______________________________________________________________________________
void StKaonPionPion::Streamer(TBuffer &R__b)
{
   // Stream an object of class StKaonPionPion.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StKaonPionPion::Class(),this);
   } else {
      R__b.WriteClassBuffer(StKaonPionPion::Class(),this);
   }
}

//______________________________________________________________________________
void StKaonPionPion::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StKaonPionPion.
      TClass *R__cl = ::StKaonPionPion::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mKaonPionId", &mKaonPionId);
      R__insp.Inspect(R__cl, R__parent, "mPionId", &mPionId);
      R__insp.Inspect(R__cl, R__parent, "mM", &mM);
      R__insp.Inspect(R__cl, R__parent, "mPt", &mPt);
      R__insp.Inspect(R__cl, R__parent, "mEta", &mEta);
      R__insp.Inspect(R__cl, R__parent, "mPhi", &mPhi);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StKaonPionPion(void *p) {
      return  p ? new(p) ::StKaonPionPion : new ::StKaonPionPion;
   }
   static void *newArray_StKaonPionPion(Long_t nElements, void *p) {
      return p ? new(p) ::StKaonPionPion[nElements] : new ::StKaonPionPion[nElements];
   }
   // Wrapper around operator delete
   static void delete_StKaonPionPion(void *p) {
      delete ((::StKaonPionPion*)p);
   }
   static void deleteArray_StKaonPionPion(void *p) {
      delete [] ((::StKaonPionPion*)p);
   }
   static void destruct_StKaonPionPion(void *p) {
      typedef ::StKaonPionPion current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StKaonPionPion

/********************************************************
* .sl64_gcc447/obj/StRoot/StDmesonMaker/StDmesonMaker_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStDmesonMaker_Cint();

extern "C" void G__set_cpp_environmentStDmesonMaker_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StDmesonEvent.h");
  G__add_compiledheader("StDmesonMaker.h");
  G__add_compiledheader("StDmesonTrack.h");
  G__add_compiledheader("StElectronPair.h");
  G__add_compiledheader("StKaonKaon.h");
  G__add_compiledheader("StKaonKaonPion.h");
  G__add_compiledheader("StKaonPion.h");
  G__add_compiledheader("StKaonPionPion.h");
  G__cpp_reset_tagtableStDmesonMaker_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStDmesonMaker_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StDmesonTrack */
static int G__StDmesonMaker_Cint_150_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StDmesonTrack[n];
     } else {
       p = new((void*) gvp) StDmesonTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StDmesonTrack;
     } else {
       p = new((void*) gvp) StDmesonTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StDmesonTrack(
(StPicoTrack*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StDmesonTrack(
(StPicoTrack*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorF* pobj;
         const StThreeVectorF xobj = ((const StDmesonTrack*) G__getstructoffset())->pMom();
         pobj = new StThreeVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorF* pobj;
         const StThreeVectorF xobj = ((const StDmesonTrack*) G__getstructoffset())->gMom();
         pobj = new StThreeVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->dca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StDmesonTrack*) G__getstructoffset())->charge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->nHitsFit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->nHitsMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->nHitsDedx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->dEdx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->nSigmaPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->nSigmaKaon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->nSigmaProton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->nSigmaElectron());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->firstTpcPointR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->btofMatchFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->btofBeta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->btofYLocal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->adc0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->e0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->e());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->zDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonTrack*) G__getstructoffset())->phiDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->nEta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->nPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->btowId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->trgTowId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->trgTowDsmAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonTrack*) G__getstructoffset())->trgTowAdc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StDmesonTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StDmesonTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StDmesonTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_150_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_150_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StDmesonTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StDmesonTrack(*(StDmesonTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StDmesonTrack G__TStDmesonTrack;
static int G__StDmesonMaker_Cint_150_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StDmesonTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StDmesonTrack*) (soff+(sizeof(StDmesonTrack)*i)))->~G__TStDmesonTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StDmesonTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StDmesonTrack*) (soff))->~G__TStDmesonTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_150_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonTrack* dest = (StDmesonTrack*) G__getstructoffset();
   *dest = *(StDmesonTrack*) libp->para[0].ref;
   const StDmesonTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StKaonPion */
static int G__StDmesonMaker_Cint_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonPion[n];
     } else {
       p = new((void*) gvp) StKaonPion[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonPion;
     } else {
       p = new((void*) gvp) StKaonPion;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonPion((StKaonPion*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StKaonPion((StKaonPion*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonPion(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StKaonPion(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonPion*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonPion*) G__getstructoffset())->kaonId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonPion*) G__getstructoffset())->pionId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->openAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPion*) G__getstructoffset())->cosThetaStar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVectorF* pobj;
         StLorentzVectorF xobj = ((StKaonPion*) G__getstructoffset())->lorentzVector();
         pobj = new StLorentzVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StKaonPion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StKaonPion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StKaonPion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonPion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonPion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonPion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StKaonPion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StKaonPion(*(StKaonPion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StKaonPion G__TStKaonPion;
static int G__StDmesonMaker_Cint_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StKaonPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StKaonPion*) (soff+(sizeof(StKaonPion)*i)))->~G__TStKaonPion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StKaonPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StKaonPion*) (soff))->~G__TStKaonPion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPion* dest = (StKaonPion*) G__getstructoffset();
   *dest = *(StKaonPion*) libp->para[0].ref;
   const StKaonPion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StKaonPionPion */
static int G__StDmesonMaker_Cint_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPionPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonPionPion[n];
     } else {
       p = new((void*) gvp) StKaonPionPion[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonPionPion;
     } else {
       p = new((void*) gvp) StKaonPionPion;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPionPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonPionPion((StKaonPionPion*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StKaonPionPion((StKaonPionPion*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPionPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonPionPion(
(StKaonPion*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StKaonPionPion(
(StKaonPion*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonPionPion*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonPionPion*) G__getstructoffset())->kaonPionId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonPionPion*) G__getstructoffset())->pionId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPionPion*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPionPion*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPionPion*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonPionPion*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVectorF* pobj;
         StLorentzVectorF xobj = ((StKaonPionPion*) G__getstructoffset())->lorentzVector();
         pobj = new StLorentzVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StKaonPionPion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPionPion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StKaonPionPion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StKaonPionPion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonPionPion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPionPion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonPionPion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonPionPion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_174_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonPionPion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_174_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StKaonPionPion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StKaonPionPion(*(StKaonPionPion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StKaonPionPion G__TStKaonPionPion;
static int G__StDmesonMaker_Cint_174_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StKaonPionPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StKaonPionPion*) (soff+(sizeof(StKaonPionPion)*i)))->~G__TStKaonPionPion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StKaonPionPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StKaonPionPion*) (soff))->~G__TStKaonPionPion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonPionPion* dest = (StKaonPionPion*) G__getstructoffset();
   *dest = *(StKaonPionPion*) libp->para[0].ref;
   const StKaonPionPion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StKaonKaon */
static int G__StDmesonMaker_Cint_175_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonKaon[n];
     } else {
       p = new((void*) gvp) StKaonKaon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonKaon;
     } else {
       p = new((void*) gvp) StKaonKaon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonKaon((StKaonKaon*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StKaonKaon((StKaonKaon*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonKaon(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StKaonKaon(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonKaon*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonKaon*) G__getstructoffset())->kaon1Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonKaon*) G__getstructoffset())->kaon2Id());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaon*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaon*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaon*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaon*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaon*) G__getstructoffset())->openAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVectorF* pobj;
         StLorentzVectorF xobj = ((StKaonKaon*) G__getstructoffset())->lorentzVector();
         pobj = new StLorentzVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StKaonKaon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StKaonKaon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StKaonKaon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonKaon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonKaon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_175_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonKaon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_175_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StKaonKaon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StKaonKaon(*(StKaonKaon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StKaonKaon G__TStKaonKaon;
static int G__StDmesonMaker_Cint_175_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StKaonKaon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StKaonKaon*) (soff+(sizeof(StKaonKaon)*i)))->~G__TStKaonKaon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StKaonKaon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StKaonKaon*) (soff))->~G__TStKaonKaon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_175_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaon* dest = (StKaonKaon*) G__getstructoffset();
   *dest = *(StKaonKaon*) libp->para[0].ref;
   const StKaonKaon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StKaonKaonPion */
static int G__StDmesonMaker_Cint_176_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonKaonPion[n];
     } else {
       p = new((void*) gvp) StKaonKaonPion[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StKaonKaonPion;
     } else {
       p = new((void*) gvp) StKaonKaonPion;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonKaonPion((StKaonKaonPion*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StKaonKaonPion((StKaonKaonPion*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaonPion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StKaonKaonPion(
(StKaonKaon*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) StKaonKaonPion(
(StKaonKaon*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonKaonPion*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonKaonPion*) G__getstructoffset())->kaonKaonId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StKaonKaonPion*) G__getstructoffset())->pionId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaonPion*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaonPion*) G__getstructoffset())->pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaonPion*) G__getstructoffset())->eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaonPion*) G__getstructoffset())->phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StKaonKaonPion*) G__getstructoffset())->cosThetaStarPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         StLorentzVectorF* pobj;
         StLorentzVectorF xobj = ((StKaonKaonPion*) G__getstructoffset())->lorentzVector();
         pobj = new StLorentzVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StKaonKaonPion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaonPion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StKaonKaonPion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StKaonKaonPion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StKaonKaonPion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaonPion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonKaonPion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StKaonKaonPion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_176_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StKaonKaonPion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_176_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StKaonKaonPion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StKaonKaonPion(*(StKaonKaonPion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StKaonKaonPion G__TStKaonKaonPion;
static int G__StDmesonMaker_Cint_176_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StKaonKaonPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StKaonKaonPion*) (soff+(sizeof(StKaonKaonPion)*i)))->~G__TStKaonKaonPion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StKaonKaonPion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StKaonKaonPion*) (soff))->~G__TStKaonKaonPion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_176_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StKaonKaonPion* dest = (StKaonKaonPion*) G__getstructoffset();
   *dest = *(StKaonKaonPion*) libp->para[0].ref;
   const StKaonKaonPion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StElectronPair */
static int G__StDmesonMaker_Cint_177_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StElectronPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StElectronPair[n];
     } else {
       p = new((void*) gvp) StElectronPair[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StElectronPair;
     } else {
       p = new((void*) gvp) StElectronPair;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StElectronPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StElectronPair((StElectronPair*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) StElectronPair((StElectronPair*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StElectronPair* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StElectronPair(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) StElectronPair(
(StPicoTrack*) G__int(libp->para[0]), (StPicoTrack*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StElectronPair*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StElectronPair*) G__getstructoffset())->electronId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StElectronPair*) G__getstructoffset())->partnerId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StElectronPair*) G__getstructoffset())->m());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StElectronPair*) G__getstructoffset())->pairDca());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const StElectronPair*) G__getstructoffset())->partnerCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StElectronPair::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StElectronPair::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StElectronPair::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StElectronPair::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StElectronPair*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StElectronPair::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StElectronPair::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StElectronPair::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_177_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StElectronPair::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_177_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StElectronPair* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StElectronPair(*(StElectronPair*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StElectronPair G__TStElectronPair;
static int G__StDmesonMaker_Cint_177_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StElectronPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StElectronPair*) (soff+(sizeof(StElectronPair)*i)))->~G__TStElectronPair();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StElectronPair*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StElectronPair*) (soff))->~G__TStElectronPair();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_177_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StElectronPair* dest = (StElectronPair*) G__getstructoffset();
   *dest = *(StElectronPair*) libp->para[0].ref;
   const StElectronPair& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StDmesonEvent */
static int G__StDmesonMaker_Cint_178_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StDmesonEvent[n];
     } else {
       p = new((void*) gvp) StDmesonEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StDmesonEvent;
     } else {
       p = new((void*) gvp) StDmesonEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((StDmesonEvent*) G__getstructoffset())->clear((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((StDmesonEvent*) G__getstructoffset())->clear();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addPicoEvent(*(StPicoEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addTrack((StPicoTrack*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addKaonPion((StKaonPion*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addKaonPionPion((StKaonPionPion*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addKaonKaon((StKaonKaon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addKaonKaonPion((StKaonKaonPion*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->addElectronPair((StElectronPair*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->tracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->kaonPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->kaonPionPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->kaonKaon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->kaonKaonPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StDmesonEvent*) G__getstructoffset())->electronPair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nKaonPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nKaonPionPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nKaonKaon());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nKaonKaonPion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->nElectronPair());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->runId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->eventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const StThreeVectorF* pobj;
         const StThreeVectorF xobj = ((const StDmesonEvent*) G__getstructoffset())->primaryVertex();
         pobj = new StThreeVectorF(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->triggerWord());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->refMultPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->refMultNeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StDmesonEvent*) G__getstructoffset())->refMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonEvent*) G__getstructoffset())->vzVpd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonEvent*) G__getstructoffset())->ZDCx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonEvent*) G__getstructoffset())->BBCx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StDmesonEvent*) G__getstructoffset())->btofTrayMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StDmesonEvent*) G__getstructoffset())->numberOfGlobalTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const StDmesonEvent*) G__getstructoffset())->ranking());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const StDmesonEvent*) G__getstructoffset())->nBEMCMatch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isVPDMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isBBCMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isBBCMB_TOF0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT0_VPDMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT0_BBCMB_TOF0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT1_VPDMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT1_BBCMB_TOF0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT2_bare());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StDmesonEvent*) G__getstructoffset())->isHT2_BBCMB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StDmesonEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StDmesonEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StDmesonEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_178_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_178_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StDmesonEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StDmesonEvent(*(StDmesonEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StDmesonEvent G__TStDmesonEvent;
static int G__StDmesonMaker_Cint_178_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StDmesonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StDmesonEvent*) (soff+(sizeof(StDmesonEvent)*i)))->~G__TStDmesonEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StDmesonEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StDmesonEvent*) (soff))->~G__TStDmesonEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StDmesonMaker_Cint_178_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonEvent* dest = (StDmesonEvent*) G__getstructoffset();
   *dest = *(StDmesonEvent*) libp->para[0].ref;
   const StDmesonEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* StDmesonMaker */
static int G__StDmesonMaker_Cint_556_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StDmesonMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new StDmesonMaker(
(const char*) G__int(libp->para[0]), (StPicoDstMaker*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) StDmesonMaker(
(const char*) G__int(libp->para[0]), (StPicoDstMaker*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StDmesonMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StDmesonMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StDmesonMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StDmesonMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StDmesonMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StDmesonMaker_Cint_556_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StDmesonMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StDmesonMaker_Cint_556_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StDmesonMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StDmesonMaker(*(StDmesonMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StDmesonMaker G__TStDmesonMaker;
static int G__StDmesonMaker_Cint_556_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StDmesonMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StDmesonMaker*) (soff+(sizeof(StDmesonMaker)*i)))->~G__TStDmesonMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StDmesonMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StDmesonMaker*) (soff))->~G__TStDmesonMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StDmesonTrack */

/* StKaonPion */

/* StKaonPionPion */

/* StKaonKaon */

/* StKaonKaonPion */

/* StElectronPair */

/* StDmesonEvent */

/* StDmesonMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStDmesonMaker_Cint {
 public:
  G__Sizep2memfuncStDmesonMaker_Cint(): p(&G__Sizep2memfuncStDmesonMaker_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStDmesonMaker_Cint::*p)();
};

size_t G__get_sizep2memfuncStDmesonMaker_Cint()
{
  G__Sizep2memfuncStDmesonMaker_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStDmesonMaker_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack))) {
     StDmesonTrack *G__Lderived;
     G__Lderived=(StDmesonTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion))) {
     StKaonPion *G__Lderived;
     G__Lderived=(StKaonPion*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion))) {
     StKaonPionPion *G__Lderived;
     G__Lderived=(StKaonPionPion*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon))) {
     StKaonKaon *G__Lderived;
     G__Lderived=(StKaonKaon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion))) {
     StKaonKaonPion *G__Lderived;
     G__Lderived=(StKaonKaonPion*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair))) {
     StElectronPair *G__Lderived;
     G__Lderived=(StElectronPair*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent))) {
     StDmesonEvent *G__Lderived;
     G__Lderived=(StDmesonEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker))) {
     StDmesonMaker *G__Lderived;
     G__Lderived=(StDmesonMaker*)0x1000;
     {
       StMaker *G__Lpbase=(StMaker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StMaker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDataSet *G__Lpbase=(TDataSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TDataSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker),G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStDmesonMaker_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StThreeVectorF",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StLorentzVectorF",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string>>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StDmesonTrack */
static void G__setup_memvarStDmesonTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack));
   { StDmesonTrack *p; p=(StDmesonTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR),G__defined_typename("StThreeVectorF"),-1,2,"mPMomentum=",0,"primary momentum, (0.,0.,0.) if none");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR),G__defined_typename("StThreeVectorF"),-1,2,"mGMomentum=",0,"global  momentum");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mGDca=",0,"global dca*1000");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mDedx=",0,"dEdx*1000");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"mNHitsFit=",0,"q*nHitsFit");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mNHitsMax=",0,"nHitsMax");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mNHitsDedx=",0,"nHitsDedx");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mNSigmaPion=",0,"nsigmaPi * 100");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mNSigmaKaon=",0,"nsigmaK * 100");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mNSigmaProton=",0,"nsigmaP * 100");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mNSigmaElectron=",0,"nsigmaE * 100");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mFirstTpcPointR=",0,"R=sqrt(x*x+y*y) of first TPC point * 100; mm precision");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mBTofMatchFlag=",0,"0 - no match, 1 - one-to-one, 2 - one-to-multiple");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mBTofBeta=",0,"beta * 20000");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBTofYLocal=",0,"ylocal * 1000");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBTOWADC0=",0,"adc0 higest adc in the cluster");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBTOWE0=",0,"E0*1000 highest tower in the cluster");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBTOWE=",0,"EMC point E*1000 ");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBEMCDistZ=",0,"z*100");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBEMCDistPhi=",0,"phi*10000");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mBSMDNEta=",0,"# of hits in eta");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"mBSMDNPhi=",0,"# of hits in phi");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mBTOWId=",0,"projected tower Id 1-4800");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mTrgTowId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mTrgTowDSMADC=",0,"DSM adc of trigger tower");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mTrgTowADC=",0,"adc of trigger tower");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StKaonPion */
static void G__setup_memvarStKaonPion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   { StKaonPion *p; p=(StKaonPion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mKaonId=",0,"StDmesonTrack id; not picoDst Id");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPionId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mM=",0,"mass * 10000. : KeV precision");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPt=",0,"pT * 1000.  : MeV precision");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mEta=",0,"eta * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mPhi=",0,"phi * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mOpenAngle=",0,"openAngle * 1000.");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"mCosThetaStar=",0,"cosThetaStar * 100.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StKaonPionPion */
static void G__setup_memvarStKaonPionPion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   { StKaonPionPion *p; p=(StKaonPionPion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mKaonPionId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPionId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mM=",0,"mass * 10000. : KeV precision");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPt=",0,"pt * 1000. : MeV precision");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mEta=",0,"eta * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mPhi=",0,"phi * 1000.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StKaonKaon */
static void G__setup_memvarStKaonKaon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   { StKaonKaon *p; p=(StKaonKaon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mKaon1Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mKaon2Id=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mM=",0,"mass * 10000. : keV precision");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPt=",0,"pt * 1000.   : MeV precision");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mEta=",0,"eta * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mPhi=",0,"phi * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mOpenAngle=",0,"openAngle * 1000.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StKaonKaonPion */
static void G__setup_memvarStKaonKaonPion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   { StKaonKaonPion *p; p=(StKaonKaonPion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mKaonKaonId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPionId=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mM=",0,"mass * 10000. : KeV precision	");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPt=",0,"pt * 1000.   : MeV precision");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mEta=",0,"eta * 1000.");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"mPhi=",0,"phi * 1000.");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"mCosThetaStarPion=",0,"cosThetaStarPion * 100.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StElectronPair */
static void G__setup_memvarStElectronPair(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   { StElectronPair *p; p=(StElectronPair*)0x1000; if (p) { }
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mElectronId=",0,"StDmesonTrack id; not picoDst Id");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mPartnerId=",0,"StDmesonTrack id; not picoDst Id");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,2,"mM=",0,"mass * 100000. : 100eV precision");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"mPairDca=",0,"partnerQ*pairDca*100. : mm precision");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StDmesonEvent */
static void G__setup_memvarStDmesonEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent));
   { StDmesonEvent *p; p=(StDmesonEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mRunId=",0,"run number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mEventId=",0,"event number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR),G__defined_typename("StThreeVectorF"),-1,4,"mPrimaryVertex=",0,"primary Vertex (1st)");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mTriggerWord=",0,"self-defined trigger word - see code for details");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mRefMultNeg=",0,"TPC refMult neg");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mRefMultPos=",0,"TPC refMult pos");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"mVzVpd=",0,"VzVpd*100.");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mZDCx=",0,"zdcX");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mBBCx=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mbTofTrayMultiplicity=",0,"BTOF tray multiplicity");
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNumberOfGlobalTracks=",0,"# of global tracks");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mRanking=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mNBEMCMatch=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNKaonPionPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNKaonKaon=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNKaonKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mNElectronPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgTracks=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mKaonPionPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgKaonPionPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mKaonKaon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgKaonKaon=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mKaonKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgKaonKaonPion=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-1,4,"mElectronPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray),-1,-2,4,"fgElectronPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* StDmesonMaker */
static void G__setup_memvarStDmesonMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker));
   { StDmesonMaker *p; p=(StDmesonMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StPicoDstMaker),-1,-1,4,"mPicoDstMaker=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StPicoDst),-1,-1,4,"mPicoDst=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StPicoEvent),-1,-1,4,"mPicoEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StEmcGeom),-1,-1,4,"mEmcGeom=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TFile),-1,-1,4,"mOutputFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TTree),-1,-1,4,"mTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent),-1,-1,4,"mDmesonEvent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStDmesonMaker_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStDmesonTrack(void) {
   /* StDmesonTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack));
   G__memfunc_setup("StDmesonTrack",1314,G__StDmesonMaker_Cint_150_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StDmesonTrack",1314,G__StDmesonMaker_Cint_150_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack), -1, 0, 4, 1, 1, 0, 
"U 'StPicoTrack' - 0 - - s - 'Short_t' 0 - - "
"r - 'UShort_t' 0 - - r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pMom",409,G__StDmesonMaker_Cint_150_0_4, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR), G__defined_typename("StThreeVectorF"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("gMom",400,G__StDmesonMaker_Cint_150_0_5, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR), G__defined_typename("StThreeVectorF"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dca",296,G__StDmesonMaker_Cint_150_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("charge",618,G__StDmesonMaker_Cint_150_0_7, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHitsFit",809,G__StDmesonMaker_Cint_150_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHitsMax",812,G__StDmesonMaker_Cint_150_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nHitsDedx",907,G__StDmesonMaker_Cint_150_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dEdx",389,G__StDmesonMaker_Cint_150_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSigmaPion",1013,G__StDmesonMaker_Cint_150_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSigmaKaon",1000,G__StDmesonMaker_Cint_150_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSigmaProton",1249,G__StDmesonMaker_Cint_150_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nSigmaElectron",1435,G__StDmesonMaker_Cint_150_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstTpcPointR",1451,G__StDmesonMaker_Cint_150_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btofMatchFlag",1298,G__StDmesonMaker_Cint_150_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btofBeta",807,G__StDmesonMaker_Cint_150_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btofYLocal",1007,G__StDmesonMaker_Cint_150_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adc0",344,G__StDmesonMaker_Cint_150_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e0",149,G__StDmesonMaker_Cint_150_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("e",101,G__StDmesonMaker_Cint_150_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("zDist",526,G__StDmesonMaker_Cint_150_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phiDist",725,G__StDmesonMaker_Cint_150_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nEta",392,G__StDmesonMaker_Cint_150_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nPhi",399,G__StDmesonMaker_Cint_150_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btowId",617,G__StDmesonMaker_Cint_150_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trgTowId",820,G__StDmesonMaker_Cint_150_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trgTowDsmAdc",1203,G__StDmesonMaker_Cint_150_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("trgTowAdc",911,G__StDmesonMaker_Cint_150_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_150_0_31, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StDmesonTrack::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_150_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonTrack::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_150_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StDmesonTrack::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_150_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StDmesonTrack::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_150_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_150_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonTrack::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_150_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonTrack::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_150_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonTrack::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_150_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonTrack::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StDmesonTrack", 1314, G__StDmesonMaker_Cint_150_0_43, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack), -1, 0, 1, 1, 1, 0, "u 'StDmesonTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StDmesonTrack", 1440, G__StDmesonMaker_Cint_150_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_150_0_45, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack), -1, 1, 1, 1, 1, 0, "u 'StDmesonTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStKaonPion(void) {
   /* StKaonPion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion));
   G__memfunc_setup("StKaonPion",998,G__StDmesonMaker_Cint_173_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonPion",998,G__StDmesonMaker_Cint_173_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion), -1, 0, 1, 1, 1, 0, "U 'StKaonPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonPion",998,G__StDmesonMaker_Cint_173_0_3, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion), -1, 0, 4, 1, 1, 0, 
"U 'StPicoTrack' - 0 - - U 'StPicoTrack' - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_173_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonId",598,G__StDmesonMaker_Cint_173_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pionId",611,G__StDmesonMaker_Cint_173_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StDmesonMaker_Cint_173_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StDmesonMaker_Cint_173_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StDmesonMaker_Cint_173_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StDmesonMaker_Cint_173_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openAngle",921,G__StDmesonMaker_Cint_173_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaStar",1237,G__StDmesonMaker_Cint_173_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lorentzVector",1409,G__StDmesonMaker_Cint_173_0_13, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR), G__defined_typename("StLorentzVectorF"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_173_0_14, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StKaonPion::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_173_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPion::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_173_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StKaonPion::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_173_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StKaonPion::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_173_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_173_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPion::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_173_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonPion::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_173_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPion::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_173_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonPion::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StKaonPion", 998, G__StDmesonMaker_Cint_173_0_26, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion), -1, 0, 1, 1, 1, 0, "u 'StKaonPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StKaonPion", 1124, G__StDmesonMaker_Cint_173_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_173_0_28, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion), -1, 1, 1, 1, 1, 0, "u 'StKaonPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStKaonPionPion(void) {
   /* StKaonPionPion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion));
   G__memfunc_setup("StKaonPionPion",1404,G__StDmesonMaker_Cint_174_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonPionPion",1404,G__StDmesonMaker_Cint_174_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion), -1, 0, 1, 1, 1, 0, "U 'StKaonPionPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonPionPion",1404,G__StDmesonMaker_Cint_174_0_3, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion), -1, 0, 4, 1, 1, 0, 
"U 'StKaonPion' - 0 - - U 'StPicoTrack' - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_174_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonPionId",1004,G__StDmesonMaker_Cint_174_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pionId",611,G__StDmesonMaker_Cint_174_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StDmesonMaker_Cint_174_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StDmesonMaker_Cint_174_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StDmesonMaker_Cint_174_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StDmesonMaker_Cint_174_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lorentzVector",1409,G__StDmesonMaker_Cint_174_0_11, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR), G__defined_typename("StLorentzVectorF"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_174_0_12, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StKaonPionPion::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_174_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPionPion::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_174_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StKaonPionPion::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_174_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StKaonPionPion::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_174_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_174_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPionPion::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_174_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonPionPion::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_174_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonPionPion::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_174_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonPionPion::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StKaonPionPion", 1404, G__StDmesonMaker_Cint_174_0_24, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion), -1, 0, 1, 1, 1, 0, "u 'StKaonPionPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StKaonPionPion", 1530, G__StDmesonMaker_Cint_174_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_174_0_26, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion), -1, 1, 1, 1, 1, 0, "u 'StKaonPionPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStKaonKaon(void) {
   /* StKaonKaon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon));
   G__memfunc_setup("StKaonKaon",985,G__StDmesonMaker_Cint_175_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonKaon",985,G__StDmesonMaker_Cint_175_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon), -1, 0, 1, 1, 1, 0, "U 'StKaonKaon' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonKaon",985,G__StDmesonMaker_Cint_175_0_3, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon), -1, 0, 4, 1, 1, 0, 
"U 'StPicoTrack' - 0 - - U 'StPicoTrack' - 0 - - "
"i - 'Int_t' 0 - k1Id i - 'Int_t' 0 - k2Id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_175_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaon1Id",647,G__StDmesonMaker_Cint_175_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaon2Id",648,G__StDmesonMaker_Cint_175_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StDmesonMaker_Cint_175_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StDmesonMaker_Cint_175_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StDmesonMaker_Cint_175_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StDmesonMaker_Cint_175_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openAngle",921,G__StDmesonMaker_Cint_175_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lorentzVector",1409,G__StDmesonMaker_Cint_175_0_12, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR), G__defined_typename("StLorentzVectorF"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_175_0_13, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StKaonKaon::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_175_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaon::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_175_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StKaonKaon::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_175_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StKaonKaon::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_175_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_175_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaon::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_175_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonKaon::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_175_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaon::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_175_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonKaon::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StKaonKaon", 985, G__StDmesonMaker_Cint_175_0_25, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon), -1, 0, 1, 1, 1, 0, "u 'StKaonKaon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StKaonKaon", 1111, G__StDmesonMaker_Cint_175_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_175_0_27, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon), -1, 1, 1, 1, 1, 0, "u 'StKaonKaon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStKaonKaonPion(void) {
   /* StKaonKaonPion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion));
   G__memfunc_setup("StKaonKaonPion",1391,G__StDmesonMaker_Cint_176_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonKaonPion",1391,G__StDmesonMaker_Cint_176_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion), -1, 0, 1, 1, 1, 0, "U 'StKaonKaonPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StKaonKaonPion",1391,G__StDmesonMaker_Cint_176_0_3, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion), -1, 0, 4, 1, 1, 0, 
"U 'StKaonKaon' - 0 - - U 'StPicoTrack' - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_176_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonKaonId",991,G__StDmesonMaker_Cint_176_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pionId",611,G__StDmesonMaker_Cint_176_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StDmesonMaker_Cint_176_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pt",228,G__StDmesonMaker_Cint_176_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eta",314,G__StDmesonMaker_Cint_176_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("phi",321,G__StDmesonMaker_Cint_176_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("cosThetaStarPion",1643,G__StDmesonMaker_Cint_176_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lorentzVector",1409,G__StDmesonMaker_Cint_176_0_12, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR), G__defined_typename("StLorentzVectorF"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_176_0_13, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StKaonKaonPion::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_176_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaonPion::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_176_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StKaonKaonPion::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_176_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StKaonKaonPion::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_176_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_176_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaonPion::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_176_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonKaonPion::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_176_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StKaonKaonPion::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_176_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StKaonKaonPion::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StKaonKaonPion", 1391, G__StDmesonMaker_Cint_176_0_25, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion), -1, 0, 1, 1, 1, 0, "u 'StKaonKaonPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StKaonKaonPion", 1517, G__StDmesonMaker_Cint_176_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_176_0_27, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion), -1, 1, 1, 1, 1, 0, "u 'StKaonKaonPion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStElectronPair(void) {
   /* StElectronPair */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair));
   G__memfunc_setup("StElectronPair",1423,G__StDmesonMaker_Cint_177_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StElectronPair",1423,G__StDmesonMaker_Cint_177_0_2, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair), -1, 0, 1, 1, 1, 0, "U 'StElectronPair' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StElectronPair",1423,G__StDmesonMaker_Cint_177_0_3, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair), -1, 0, 5, 1, 1, 0, 
"U 'StPicoTrack' - 0 - - U 'StPicoTrack' - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_177_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("electronId",1033,G__StDmesonMaker_Cint_177_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("partnerId",937,G__StDmesonMaker_Cint_177_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("m",109,G__StDmesonMaker_Cint_177_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pairDca",692,G__StDmesonMaker_Cint_177_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("partnerCharge",1350,G__StDmesonMaker_Cint_177_0_9, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_177_0_10, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StElectronPair::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_177_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StElectronPair::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_177_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StElectronPair::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_177_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StElectronPair::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_177_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_177_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StElectronPair::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_177_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StElectronPair::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_177_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StElectronPair::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_177_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StElectronPair::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StElectronPair", 1423, G__StDmesonMaker_Cint_177_0_22, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair), -1, 0, 1, 1, 1, 0, "u 'StElectronPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StElectronPair", 1549, G__StDmesonMaker_Cint_177_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_177_0_24, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair), -1, 1, 1, 1, 1, 0, "u 'StElectronPair' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStDmesonEvent(void) {
   /* StDmesonEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent));
   G__memfunc_setup("StDmesonEvent",1327,G__StDmesonMaker_Cint_178_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StDmesonMaker_Cint_178_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPicoEvent",1206,G__StDmesonMaker_Cint_178_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'StPicoEvent' - 11 - picoEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__StDmesonMaker_Cint_178_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'StPicoTrack' - 0 - - s - 'Short_t' 0 - - "
"r - 'UShort_t' 0 - - r - 'UShort_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addKaonPion",1096,G__StDmesonMaker_Cint_178_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StKaonPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addKaonPionPion",1502,G__StDmesonMaker_Cint_178_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StKaonPionPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addKaonKaon",1083,G__StDmesonMaker_Cint_178_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StKaonKaon' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addKaonKaonPion",1489,G__StDmesonMaker_Cint_178_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StKaonKaonPion' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addElectronPair",1521,G__StDmesonMaker_Cint_178_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'StElectronPair' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("tracks",648,G__StDmesonMaker_Cint_178_0_10, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonPion",831,G__StDmesonMaker_Cint_178_0_11, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonPionPion",1237,G__StDmesonMaker_Cint_178_0_12, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonKaon",818,G__StDmesonMaker_Cint_178_0_13, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("kaonKaonPion",1224,G__StDmesonMaker_Cint_178_0_14, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("electronPair",1256,G__StDmesonMaker_Cint_178_0_15, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nTracks",726,G__StDmesonMaker_Cint_178_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nKaonPion",909,G__StDmesonMaker_Cint_178_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nKaonPionPion",1315,G__StDmesonMaker_Cint_178_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nKaonKaon",896,G__StDmesonMaker_Cint_178_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nKaonKaonPion",1302,G__StDmesonMaker_Cint_178_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nElectronPair",1334,G__StDmesonMaker_Cint_178_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runId",514,G__StDmesonMaker_Cint_178_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventId",719,G__StDmesonMaker_Cint_178_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("primaryVertex",1410,G__StDmesonMaker_Cint_178_0_24, 117, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR), G__defined_typename("StThreeVectorF"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggerWord",1168,G__StDmesonMaker_Cint_178_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refMultPos",1041,G__StDmesonMaker_Cint_178_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refMultNeg",1017,G__StDmesonMaker_Cint_178_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refMult",735,G__StDmesonMaker_Cint_178_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vzVpd",538,G__StDmesonMaker_Cint_178_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ZDCx",345,G__StDmesonMaker_Cint_178_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BBCx",319,G__StDmesonMaker_Cint_178_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("btofTrayMultiplicity",2132,G__StDmesonMaker_Cint_178_0_32, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfGlobalTracks",2039,G__StDmesonMaker_Cint_178_0_33, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ranking",746,G__StDmesonMaker_Cint_178_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nBEMCMatch",882,G__StDmesonMaker_Cint_178_0_35, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isMB",363,G__StDmesonMaker_Cint_178_0_36, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isVPDMB",597,G__StDmesonMaker_Cint_178_0_37, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBBCMB",562,G__StDmesonMaker_Cint_178_0_38, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBBCMB_TOF0",938,G__StDmesonMaker_Cint_178_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT",376,G__StDmesonMaker_Cint_178_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT0",424,G__StDmesonMaker_Cint_178_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT0_VPDMB",896,G__StDmesonMaker_Cint_178_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT0_BBCMB_TOF0",1237,G__StDmesonMaker_Cint_178_0_43, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT1",425,G__StDmesonMaker_Cint_178_0_44, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT1_VPDMB",897,G__StDmesonMaker_Cint_178_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT1_BBCMB_TOF0",1238,G__StDmesonMaker_Cint_178_0_46, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT2",426,G__StDmesonMaker_Cint_178_0_47, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT2_bare",931,G__StDmesonMaker_Cint_178_0_48, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHT2_BBCMB",863,G__StDmesonMaker_Cint_178_0_49, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_178_0_50, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StDmesonEvent::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_178_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonEvent::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_178_0_52, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StDmesonEvent::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_178_0_53, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StDmesonEvent::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_178_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_178_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonEvent::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_178_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonEvent::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_178_0_60, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonEvent::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_178_0_61, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonEvent::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StDmesonEvent", 1327, G__StDmesonMaker_Cint_178_0_62, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent), -1, 0, 1, 1, 1, 0, "u 'StDmesonEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StDmesonEvent", 1453, G__StDmesonMaker_Cint_178_0_63, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StDmesonMaker_Cint_178_0_64, (int) ('u'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent), -1, 1, 1, 1, 1, 0, "u 'StDmesonEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncStDmesonMaker(void) {
   /* StDmesonMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker));
   G__memfunc_setup("StDmesonMaker",1309,G__StDmesonMaker_Cint_556_0_1, 105, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name U 'StPicoDstMaker' - 0 - picoMaker "
"C - - 10 - outName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Make",382,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Finish",609,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isGoodEvent",1127,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isGoodTrack",1114,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'StPicoTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPion",626,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'StPicoTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isKaon",613,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'StPicoTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isElectron",1048,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'StPicoTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPartnerElectron",1780,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'StPicoTrack' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrgBTOW",937,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"U 'StPicoTrack' - 0 - trk s - 'Short_t' 1 - f_tow_id "
"r - 'UShort_t' 1 - f_DSM_adc r - 'UShort_t' 1 - f_adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StDmesonMaker_Cint_556_0_13, 85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StDmesonMaker::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StDmesonMaker_Cint_556_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonMaker::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StDmesonMaker_Cint_556_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StDmesonMaker::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StDmesonMaker_Cint_556_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StDmesonMaker::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StDmesonMaker_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StDmesonMaker_Cint_556_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StDmesonMaker_Cint_556_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonMaker::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StDmesonMaker_Cint_556_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonMaker::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StDmesonMaker_Cint_556_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StDmesonMaker::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StDmesonMaker_Cint_556_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StDmesonMaker::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StDmesonMaker", 1309, G__StDmesonMaker_Cint_556_0_25, (int) ('i'), G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker), -1, 0, 1, 1, 1, 0, "u 'StDmesonMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StDmesonMaker", 1435, G__StDmesonMaker_Cint_556_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStDmesonMaker_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStDmesonMaker_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStDmesonMaker_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StDmesonMaker_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StPicoEvent = { "StPicoEvent" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StPicoTrack = { "StPicoTrack" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR = { "StThreeVector<float>" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StDmesonTrack = { "StDmesonTrack" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR = { "StLorentzVector<float>" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StKaonPion = { "StKaonPion" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StKaonPionPion = { "StKaonPionPion" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StKaonKaon = { "StKaonKaon" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StKaonKaonPion = { "StKaonKaonPion" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StElectronPair = { "StElectronPair" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StDmesonEvent = { "StDmesonEvent" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TDataSet = { "TDataSet" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StMaker = { "StMaker" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StEmcGeom = { "StEmcGeom" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StPicoDst = { "StPicoDst" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StPicoDstMaker = { "StPicoDstMaker" , 99 , -1 };
G__linked_taginfo G__StDmesonMaker_CintLN_StDmesonMaker = { "StDmesonMaker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStDmesonMaker_Cint() {
  G__StDmesonMaker_CintLN_TClass.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TBuffer.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TMemberInspector.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TObject.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TNamed.tagnum = -1 ;
  G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TClonesArray.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StPicoEvent.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StPicoTrack.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StDmesonTrack.tagnum = -1 ;
  G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StKaonPion.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StKaonPionPion.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StKaonKaon.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StKaonKaonPion.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StElectronPair.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StDmesonEvent.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TDataSet.tagnum = -1 ;
  G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TFile.tagnum = -1 ;
  G__StDmesonMaker_CintLN_TTree.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StMaker.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StEmcGeom.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StPicoDst.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StPicoDstMaker.tagnum = -1 ;
  G__StDmesonMaker_CintLN_StDmesonMaker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStDmesonMaker_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StPicoEvent);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StPicoTrack);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StThreeVectorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonTrack),sizeof(StDmesonTrack),-1,324864,(char*)NULL,G__setup_memvarStDmesonTrack,G__setup_memfuncStDmesonTrack);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StLorentzVectorlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPion),sizeof(StKaonPion),-1,324864,(char*)NULL,G__setup_memvarStKaonPion,G__setup_memfuncStKaonPion);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonPionPion),sizeof(StKaonPionPion),-1,324864,(char*)NULL,G__setup_memvarStKaonPionPion,G__setup_memfuncStKaonPionPion);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaon),sizeof(StKaonKaon),-1,324864,(char*)NULL,G__setup_memvarStKaonKaon,G__setup_memfuncStKaonKaon);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StKaonKaonPion),sizeof(StKaonKaonPion),-1,324864,(char*)NULL,G__setup_memvarStKaonKaonPion,G__setup_memfuncStKaonKaonPion);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StElectronPair),sizeof(StElectronPair),-1,324864,(char*)NULL,G__setup_memvarStElectronPair,G__setup_memfuncStElectronPair);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonEvent),sizeof(StDmesonEvent),-1,292096,(char*)NULL,G__setup_memvarStDmesonEvent,G__setup_memfuncStDmesonEvent);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TDataSet);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TFile);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_TTree);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StMaker);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StEmcGeom);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StPicoDst);
   G__get_linked_tagnum_fwd(&G__StDmesonMaker_CintLN_StPicoDstMaker);
   G__tagtable_setup(G__get_linked_tagnum(&G__StDmesonMaker_CintLN_StDmesonMaker),sizeof(StDmesonMaker),-1,324608,(char*)NULL,G__setup_memvarStDmesonMaker,G__setup_memfuncStDmesonMaker);
}
extern "C" void G__cpp_setupStDmesonMaker_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStDmesonMaker_Cint()");
  G__set_cpp_environmentStDmesonMaker_Cint();
  G__cpp_setup_tagtableStDmesonMaker_Cint();

  G__cpp_setup_inheritanceStDmesonMaker_Cint();

  G__cpp_setup_typetableStDmesonMaker_Cint();

  G__cpp_setup_memvarStDmesonMaker_Cint();

  G__cpp_setup_memfuncStDmesonMaker_Cint();
  G__cpp_setup_globalStDmesonMaker_Cint();
  G__cpp_setup_funcStDmesonMaker_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStDmesonMaker_Cint();
  return;
}
class G__cpp_setup_initStDmesonMaker_Cint {
  public:
    G__cpp_setup_initStDmesonMaker_Cint() { G__add_setup_func("StDmesonMaker_Cint",(G__incsetup)(&G__cpp_setupStDmesonMaker_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStDmesonMaker_Cint() { G__remove_setup_func("StDmesonMaker_Cint"); }
};
G__cpp_setup_initStDmesonMaker_Cint G__cpp_setup_initializerStDmesonMaker_Cint;

