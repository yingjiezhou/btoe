//
// File generated by rootcint at Mon Jun 22 13:31:34 2015

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StRefMultCorr_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void StRefMultCorr_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_StRefMultCorr(void *p = 0);
   static void *newArray_StRefMultCorr(Long_t size, void *p);
   static void delete_StRefMultCorr(void *p);
   static void deleteArray_StRefMultCorr(void *p);
   static void destruct_StRefMultCorr(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::StRefMultCorr*)
   {
      ::StRefMultCorr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::StRefMultCorr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("StRefMultCorr", ::StRefMultCorr::Class_Version(), ".sl64_gcc447/obj/StRoot/StRefMultCorr/StRefMultCorr.h", 69,
                  typeid(::StRefMultCorr), DefineBehavior(ptr, ptr),
                  &::StRefMultCorr::Dictionary, isa_proxy, 4,
                  sizeof(::StRefMultCorr) );
      instance.SetNew(&new_StRefMultCorr);
      instance.SetNewArray(&newArray_StRefMultCorr);
      instance.SetDelete(&delete_StRefMultCorr);
      instance.SetDeleteArray(&deleteArray_StRefMultCorr);
      instance.SetDestructor(&destruct_StRefMultCorr);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::StRefMultCorr*)
   {
      return GenerateInitInstanceLocal((::StRefMultCorr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::StRefMultCorr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void CentralityMaker_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void delete_CentralityMaker(void *p);
   static void deleteArray_CentralityMaker(void *p);
   static void destruct_CentralityMaker(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::CentralityMaker*)
   {
      ::CentralityMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::CentralityMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("CentralityMaker", ::CentralityMaker::Class_Version(), ".sl64_gcc447/obj/StRoot/StRefMultCorr/CentralityMaker.h", 38,
                  typeid(::CentralityMaker), DefineBehavior(ptr, ptr),
                  &::CentralityMaker::Dictionary, isa_proxy, 4,
                  sizeof(::CentralityMaker) );
      instance.SetDelete(&delete_CentralityMaker);
      instance.SetDeleteArray(&deleteArray_CentralityMaker);
      instance.SetDestructor(&destruct_CentralityMaker);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::CentralityMaker*)
   {
      return GenerateInitInstanceLocal((::CentralityMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::CentralityMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *StRefMultCorr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *StRefMultCorr::Class_Name()
{
   return "StRefMultCorr";
}

//______________________________________________________________________________
const char *StRefMultCorr::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StRefMultCorr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int StRefMultCorr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::StRefMultCorr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void StRefMultCorr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StRefMultCorr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *StRefMultCorr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::StRefMultCorr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *CentralityMaker::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *CentralityMaker::Class_Name()
{
   return "CentralityMaker";
}

//______________________________________________________________________________
const char *CentralityMaker::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CentralityMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CentralityMaker::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::CentralityMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CentralityMaker::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CentralityMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CentralityMaker::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::CentralityMaker*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void CentralityMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class CentralityMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(CentralityMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(CentralityMaker::Class(),this);
   }
}

//______________________________________________________________________________
void CentralityMaker::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class CentralityMaker.
      TClass *R__cl = ::CentralityMaker::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*fRefMultCorr", &fRefMultCorr);
      R__insp.Inspect(R__cl, R__parent, "*fRefMult2Corr", &fRefMult2Corr);
      R__insp.Inspect(R__cl, R__parent, "*fRefMult3Corr", &fRefMult3Corr);
      R__insp.Inspect(R__cl, R__parent, "*fTofTrayMultCorr", &fTofTrayMultCorr);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_CentralityMaker(void *p) {
      delete ((::CentralityMaker*)p);
   }
   static void deleteArray_CentralityMaker(void *p) {
      delete [] ((::CentralityMaker*)p);
   }
   static void destruct_CentralityMaker(void *p) {
      typedef ::CentralityMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::CentralityMaker

//______________________________________________________________________________
void StRefMultCorr::Streamer(TBuffer &R__b)
{
   // Stream an object of class StRefMultCorr.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(StRefMultCorr::Class(),this);
   } else {
      R__b.WriteClassBuffer(StRefMultCorr::Class(),this);
   }
}

//______________________________________________________________________________
void StRefMultCorr::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class StRefMultCorr.
      TClass *R__cl = ::StRefMultCorr::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "mName", &mName);
      const_cast<  TString &>( mName ).ShowMembers(R__insp, strcat(R__parent,"mName.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mRefMult", &mRefMult);
      R__insp.Inspect(R__cl, R__parent, "mVz", &mVz);
      R__insp.Inspect(R__cl, R__parent, "mZdcCoincidenceRate", &mZdcCoincidenceRate);
      R__insp.Inspect(R__cl, R__parent, "mRefMult_corr", &mRefMult_corr);
      R__insp.Inspect(R__cl, R__parent, "mYear", (void*)&mYear);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&mYear, R__insp, strcat(R__parent,"mYear."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mStart_runId", (void*)&mStart_runId);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&mStart_runId, R__insp, strcat(R__parent,"mStart_runId."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mStop_runId", (void*)&mStop_runId);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&mStop_runId, R__insp, strcat(R__parent,"mStop_runId."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mStart_zvertex", (void*)&mStart_zvertex);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&mStart_zvertex, R__insp, strcat(R__parent,"mStart_zvertex."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mStop_zvertex", (void*)&mStop_zvertex);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&mStop_zvertex, R__insp, strcat(R__parent,"mStop_zvertex."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mNormalize_stop", (void*)&mNormalize_stop);
      ::ROOT::GenericShowMembers("vector<Double_t>", (void*)&mNormalize_stop, R__insp, strcat(R__parent,"mNormalize_stop."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mCentrality_bins[17]", mCentrality_bins);
      R__insp.Inspect(R__cl, R__parent, "mPar_z_vertex[8]", mPar_z_vertex);
      R__insp.Inspect(R__cl, R__parent, "mPar_weight[6]", mPar_weight);
      R__insp.Inspect(R__cl, R__parent, "mPar_luminosity[2]", mPar_luminosity);
      R__insp.Inspect(R__cl, R__parent, "mParameterIndex", &mParameterIndex);
      R__insp.Inspect(R__cl, R__parent, "mBeginRun", (void*)&mBeginRun);
      ::ROOT::GenericShowMembers("multimap<std::pair<Double_t,Int_t>,Int_t>", (void*)&mBeginRun, R__insp, strcat(R__parent,"mBeginRun."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mEndRun", (void*)&mEndRun);
      ::ROOT::GenericShowMembers("multimap<std::pair<Double_t,Int_t>,Int_t>", (void*)&mEndRun, R__insp, strcat(R__parent,"mEndRun."),false);
      R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "mBadRun", (void*)&mBadRun);
      ::ROOT::GenericShowMembers("vector<Int_t>", (void*)&mBadRun, R__insp, strcat(R__parent,"mBadRun."),false);
      R__parent[R__ncp] = 0;
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_StRefMultCorr(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRefMultCorr : new ::StRefMultCorr;
   }
   static void *newArray_StRefMultCorr(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::StRefMultCorr[nElements] : new ::StRefMultCorr[nElements];
   }
   // Wrapper around operator delete
   static void delete_StRefMultCorr(void *p) {
      delete ((::StRefMultCorr*)p);
   }
   static void deleteArray_StRefMultCorr(void *p) {
      delete [] ((::StRefMultCorr*)p);
   }
   static void destruct_StRefMultCorr(void *p) {
      typedef ::StRefMultCorr current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::StRefMultCorr

/********************************************************
* .sl64_gcc447/obj/StRoot/StRefMultCorr/StRefMultCorr_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStRefMultCorr_Cint();

extern "C" void G__set_cpp_environmentStRefMultCorr_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("CentralityMaker.h");
  G__add_compiledheader("StRefMultCorr.h");
  G__cpp_reset_tagtableStRefMultCorr_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevStRefMultCorr_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* StRefMultCorr */
static int G__StRefMultCorr_Cint_146_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   StRefMultCorr* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new StRefMultCorr(*((const TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) StRefMultCorr(*((const TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRefMultCorr[n];
       } else {
         p = new((void*) gvp) StRefMultCorr[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new StRefMultCorr;
       } else {
         p = new((void*) gvp) StRefMultCorr;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((StRefMultCorr*) G__getstructoffset())->isBadRun((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((StRefMultCorr*) G__getstructoffset())->initEvent((const UShort_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((StRefMultCorr*) G__getstructoffset())->initEvent((const UShort_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRefMultCorr*) G__getstructoffset())->getRefMultCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) ((const StRefMultCorr*) G__getstructoffset())->getRefMultCorr((const UShort_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) ((const StRefMultCorr*) G__getstructoffset())->getRefMultCorr((const UShort_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRefMultCorr*) G__getstructoffset())->getCentralityBin16());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const StRefMultCorr*) G__getstructoffset())->getCentralityBin9());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const StRefMultCorr*) G__getstructoffset())->getWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRefMultCorr*) G__getstructoffset())->init((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StRefMultCorr*) G__getstructoffset())->getBeginRun((const Double_t) G__double(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((StRefMultCorr*) G__getstructoffset())->getEndRun((const Double_t) G__double(libp->para[0]), (const Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const StRefMultCorr*) G__getstructoffset())->print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const StRefMultCorr*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) StRefMultCorr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefMultCorr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) StRefMultCorr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      StRefMultCorr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const StRefMultCorr*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRefMultCorr*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRefMultCorr*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((StRefMultCorr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefMultCorr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRefMultCorr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) StRefMultCorr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_146_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) StRefMultCorr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StRefMultCorr_Cint_146_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   StRefMultCorr* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new StRefMultCorr(*(StRefMultCorr*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef StRefMultCorr G__TStRefMultCorr;
static int G__StRefMultCorr_Cint_146_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (StRefMultCorr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((StRefMultCorr*) (soff+(sizeof(StRefMultCorr)*i)))->~G__TStRefMultCorr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (StRefMultCorr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((StRefMultCorr*) (soff))->~G__TStRefMultCorr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* CentralityMaker */
static int G__StRefMultCorr_Cint_147_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityMaker::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityMaker*) G__getstructoffset())->getRefMultCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityMaker*) G__getstructoffset())->getRefMult2Corr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityMaker*) G__getstructoffset())->getRefMult3Corr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((CentralityMaker*) G__getstructoffset())->getTofTrayMultCorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const CentralityMaker*) G__getstructoffset())->help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) CentralityMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) CentralityMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      CentralityMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const CentralityMaker*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityMaker*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityMaker*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((CentralityMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) CentralityMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StRefMultCorr_Cint_147_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) CentralityMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StRefMultCorr_Cint_147_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   CentralityMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new CentralityMaker(*(CentralityMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef CentralityMaker G__TCentralityMaker;
static int G__StRefMultCorr_Cint_147_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (CentralityMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((CentralityMaker*) (soff+(sizeof(CentralityMaker)*i)))->~G__TCentralityMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (CentralityMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((CentralityMaker*) (soff))->~G__TCentralityMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StRefMultCorr_Cint_147_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   CentralityMaker* dest = (CentralityMaker*) G__getstructoffset();
   *dest = *(CentralityMaker*) libp->para[0].ref;
   const CentralityMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* StRefMultCorr */

/* CentralityMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStRefMultCorr_Cint {
 public:
  G__Sizep2memfuncStRefMultCorr_Cint(): p(&G__Sizep2memfuncStRefMultCorr_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStRefMultCorr_Cint::*p)();
};

size_t G__get_sizep2memfuncStRefMultCorr_Cint()
{
  G__Sizep2memfuncStRefMultCorr_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStRefMultCorr_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStRefMultCorr_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Double_t,Int_t>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_pairlEdoublecOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<std::pair<Double_t,Int_t>,Int_t>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<pair<double,int>,int>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<pair<double,int>,int,less<pair<double,int> >>",117,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* StRefMultCorr */
static void G__setup_memvarStRefMultCorr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr));
   { StRefMultCorr *p; p=(StRefMultCorr*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,1,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TString),-1,-1,4,"mName=",0,"refmult, refmult2, refmult3 or toftray (case insensitive)");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA),-1,-2,1,"mNCentrality=16",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA),-1,-2,1,"mNPar_z_vertex=8",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA),-1,-2,1,"mNPar_weight=6",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA),-1,-2,1,"mNPar_luminosity=2",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"mRefMult=",0,"/ Current multiplicity");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mVz=",0,"/ Current primary z-vertex");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mZdcCoincidenceRate=",0,"/ Current ZDC coincidence rate");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"mRefMult_corr=",0,"/ Corrected refmult");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"mYear=",0,"/ Year");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"mStart_runId=",0,"/ Start run id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"mStop_runId=",0,"/ Stop run id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mStart_zvertex=",0,"/ Start z-vertex (cm)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mStop_zvertex=",0,"/ Stop z-vertex (cm)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mNormalize_stop=",0,"/ Normalization between MC and data (normalized in refmult>mNormalize_stop)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"mCentrality_bins[17]=",0,"/ Centrality bins (last value is set to 5000)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mPar_z_vertex[8]=",0,"/ parameters for z-vertex correction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mPar_weight[6]=",0,"/ parameters for weight correction");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"mPar_luminosity[2]=",0,"/ parameters for luminosity correction (valid only for 200 GeV)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mParameterIndex=",0,"/ Index of correction parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR),G__defined_typename("multimap<std::pair<Double_t,Int_t>,Int_t>"),-1,4,"mBeginRun=",0,"/ Begin run number for a given (energy, year)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR),G__defined_typename("multimap<std::pair<Double_t,Int_t>,Int_t>"),-1,4,"mEndRun=",0,"/ End run number for a given (energy, year)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"mBadRun=",0,"/ Bad run number list");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* CentralityMaker */
static void G__setup_memvarCentralityMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker));
   { CentralityMaker *p; p=(CentralityMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker),-1,-2,4,"fInstance=",0,"Static pointer of CentralityMaker");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr),-1,-1,4,"fRefMultCorr=",0,"refmult based centrality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr),-1,-1,4,"fRefMult2Corr=",0,"refmult2 based centrality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr),-1,-1,4,"fRefMult3Corr=",0,"refmult3 based centrality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr),-1,-1,4,"fTofTrayMultCorr=",0,"tofTrayMult based centrality");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStRefMultCorr_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncStRefMultCorr(void) {
   /* StRefMultCorr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr));
   G__memfunc_setup("StRefMultCorr",1308,G__StRefMultCorr_Cint_146_0_1, 105, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 1, 1, 1, 0, "u 'TString' - 10 '\"refmult\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBadRun",792,G__StRefMultCorr_Cint_146_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 10 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initEvent",950,G__StRefMultCorr_Cint_146_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"r - 'UShort_t' 10 - RefMult d - 'Double_t' 10 - z "
"d - 'Double_t' 10 '0.0' zdcCoincidenceRate", "Set multiplicity, vz and zdc coincidence rate", (void*) NULL, 0);
   G__memfunc_setup("getRefMultCorr",1429,G__StRefMultCorr_Cint_146_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRefMultCorr",1429,G__StRefMultCorr_Cint_146_0_5, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 8, 
"r - 'UShort_t' 10 - RefMult d - 'Double_t' 10 - z "
"d - 'Double_t' 10 - zdcCoincidenceRate h - 'UInt_t' 10 '2' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralityBin16",1759,G__StRefMultCorr_Cint_146_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCentralityBin9",1713,G__StRefMultCorr_Cint_146_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeight",936,G__StRefMultCorr_Cint_146_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__StRefMultCorr_Cint_146_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - RunId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeginRun",1114,G__StRefMultCorr_Cint_146_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 10 - energy i - 'Int_t' 10 - year", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndRun",908,G__StRefMultCorr_Cint_146_0_11, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 10 - energy i - 'Int_t' 10 - year", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StRefMultCorr_Cint_146_0_12, 121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "/ Read input parameters from text file StRoot/StRefMultCorr/Centrality_def.txt", (void*) NULL, 0);
   G__memfunc_setup("readBadRuns",1099,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "/ Read bad run numbers", (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "/ Clear all arrays", (void*) NULL, 0);
   G__memfunc_setup("isIndexOk",910,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", "/ 0 <= mParameterIndex < maxArraySize", (void*) NULL, 0);
   G__memfunc_setup("isZvertexOk",1166,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", "/ mStart_zvertex < z < mStop_zvertex", (void*) NULL, 0);
   G__memfunc_setup("isRefMultOk",1109,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 8, "", "/ 0-80%, (corrected multiplicity) > mCentrality_bins[0]", (void*) NULL, 0);
   G__memfunc_setup("isCentralityOk",1461,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - icent", "/ centrality bin check", (void*) NULL, 0);
   G__memfunc_setup("setParameterIndex",1765,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 0, "i - 'Int_t' 10 - RunId", "/ Parameter index from run id (return mParameterIndex)", (void*) NULL, 0);
   G__memfunc_setup("getTable",808,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 4, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StRefMultCorr_Cint_146_0_22, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&StRefMultCorr::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StRefMultCorr_Cint_146_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StRefMultCorr::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StRefMultCorr_Cint_146_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&StRefMultCorr::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StRefMultCorr_Cint_146_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&StRefMultCorr::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__StRefMultCorr_Cint_146_0_26, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StRefMultCorr_Cint_146_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StRefMultCorr_Cint_146_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StRefMultCorr_Cint_146_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StRefMultCorr_Cint_146_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StRefMultCorr::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StRefMultCorr_Cint_146_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StRefMultCorr::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StRefMultCorr_Cint_146_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&StRefMultCorr::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StRefMultCorr_Cint_146_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&StRefMultCorr::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("StRefMultCorr", 1308, G__StRefMultCorr_Cint_146_0_34, (int) ('i'), G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 1, 1, 1, 0, "u 'StRefMultCorr' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~StRefMultCorr", 1434, G__StRefMultCorr_Cint_146_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCentralityMaker(void) {
   /* CentralityMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker));
   G__memfunc_setup("instance",853,G__StRefMultCorr_Cint_147_0_1, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker), -1, 0, 0, 3, 1, 0, "", "Use this function to access StRefMultCorr", (void*) (CentralityMaker* (*)())(&CentralityMaker::instance), 0);
   G__memfunc_setup("getRefMultCorr",1429,G__StRefMultCorr_Cint_147_0_2, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 0, 1, 1, 0, "", "For refmult", (void*) NULL, 0);
   G__memfunc_setup("getRefMult2Corr",1479,G__StRefMultCorr_Cint_147_0_3, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 0, 1, 1, 0, "", "For refmult2", (void*) NULL, 0);
   G__memfunc_setup("getRefMult3Corr",1480,G__StRefMultCorr_Cint_147_0_4, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 0, 1, 1, 0, "", "For refmult3", (void*) NULL, 0);
   G__memfunc_setup("getTofTrayMultCorr",1857,G__StRefMultCorr_Cint_147_0_5, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr), -1, 0, 0, 1, 1, 0, "", "For TOF tray multiplicity", (void*) NULL, 0);
   G__memfunc_setup("help",425,G__StRefMultCorr_Cint_147_0_6, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CentralityMaker",1551,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker), -1, 0, 0, 1, 4, 0, "", "Constructor is private", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StRefMultCorr_Cint_147_0_8, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&CentralityMaker::Class), 0);
   G__memfunc_setup("Class_Name",982,G__StRefMultCorr_Cint_147_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CentralityMaker::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__StRefMultCorr_Cint_147_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&CentralityMaker::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__StRefMultCorr_Cint_147_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&CentralityMaker::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__StRefMultCorr_Cint_147_0_12, 85, G__get_linked_tagnum(&G__StRefMultCorr_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__StRefMultCorr_Cint_147_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__StRefMultCorr_Cint_147_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StRefMultCorr_Cint_147_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StRefMultCorr_Cint_147_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CentralityMaker::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StRefMultCorr_Cint_147_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CentralityMaker::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__StRefMultCorr_Cint_147_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&CentralityMaker::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StRefMultCorr_Cint_147_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&CentralityMaker::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("CentralityMaker", 1551, G__StRefMultCorr_Cint_147_0_20, (int) ('i'), G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker), -1, 0, 1, 1, 1, 0, "u 'CentralityMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CentralityMaker", 1677, G__StRefMultCorr_Cint_147_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StRefMultCorr_Cint_147_0_22, (int) ('u'), G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker), -1, 1, 1, 1, 1, 0, "u 'CentralityMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStRefMultCorr_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStRefMultCorr_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStRefMultCorr_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StRefMultCorr_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_StRefMultCorr = { "StRefMultCorr" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_CentralityMaker = { "CentralityMaker" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_pairlEdoublecOintgR = { "pair<double,int>" , 115 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA = { "StRefMultCorr::$" , 101 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR = { "multimap<pair<double,int>,int,less<pair<double,int> >,allocator<pair<const pair<double,int>,int> > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStRefMultCorr_Cint() {
  G__StRefMultCorr_CintLN_TClass.tagnum = -1 ;
  G__StRefMultCorr_CintLN_TBuffer.tagnum = -1 ;
  G__StRefMultCorr_CintLN_TMemberInspector.tagnum = -1 ;
  G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_TString.tagnum = -1 ;
  G__StRefMultCorr_CintLN_StRefMultCorr.tagnum = -1 ;
  G__StRefMultCorr_CintLN_CentralityMaker.tagnum = -1 ;
  G__StRefMultCorr_CintLN_pairlEdoublecOintgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA.tagnum = -1 ;
  G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStRefMultCorr_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_TString);
   G__tagtable_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_StRefMultCorr),sizeof(StRefMultCorr),-1,263424,(char*)NULL,G__setup_memvarStRefMultCorr,G__setup_memfuncStRefMultCorr);
   G__tagtable_setup(G__get_linked_tagnum(&G__StRefMultCorr_CintLN_CentralityMaker),sizeof(CentralityMaker),-1,263424,(char*)NULL,G__setup_memvarCentralityMaker,G__setup_memfuncCentralityMaker);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_pairlEdoublecOintgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_StRefMultCorrcLcLdA);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StRefMultCorr_CintLN_multimaplEpairlEdoublecOintgRcOintcOlesslEpairlEdoublecOintgRsPgRcOallocatorlEpairlEconstsPpairlEdoublecOintgRcOintgRsPgRsPgR);
}
extern "C" void G__cpp_setupStRefMultCorr_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupStRefMultCorr_Cint()");
  G__set_cpp_environmentStRefMultCorr_Cint();
  G__cpp_setup_tagtableStRefMultCorr_Cint();

  G__cpp_setup_inheritanceStRefMultCorr_Cint();

  G__cpp_setup_typetableStRefMultCorr_Cint();

  G__cpp_setup_memvarStRefMultCorr_Cint();

  G__cpp_setup_memfuncStRefMultCorr_Cint();
  G__cpp_setup_globalStRefMultCorr_Cint();
  G__cpp_setup_funcStRefMultCorr_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStRefMultCorr_Cint();
  return;
}
class G__cpp_setup_initStRefMultCorr_Cint {
  public:
    G__cpp_setup_initStRefMultCorr_Cint() { G__add_setup_func("StRefMultCorr_Cint",(G__incsetup)(&G__cpp_setupStRefMultCorr_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStRefMultCorr_Cint() { G__remove_setup_func("StRefMultCorr_Cint"); }
};
G__cpp_setup_initStRefMultCorr_Cint G__cpp_setup_initializerStRefMultCorr_Cint;

