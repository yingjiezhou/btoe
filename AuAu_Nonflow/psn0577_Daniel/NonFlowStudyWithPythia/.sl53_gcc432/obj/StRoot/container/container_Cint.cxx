//
// File generated by rootcint at Wed May 29 09:56:33 2013

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "container_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TElectron_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TElectron(void *p = 0);
   static void *newArray_TElectron(Long_t size, void *p);
   static void delete_TElectron(void *p);
   static void deleteArray_TElectron(void *p);
   static void destruct_TElectron(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TElectron*)
   {
      ::TElectron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TElectron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TElectron", ::TElectron::Class_Version(), ".sl53_gcc432/obj/StRoot/container/TElectron.h", 4,
                  typeid(::TElectron), DefineBehavior(ptr, ptr),
                  &::TElectron::Dictionary, isa_proxy, 4,
                  sizeof(::TElectron) );
      instance.SetNew(&new_TElectron);
      instance.SetNewArray(&newArray_TElectron);
      instance.SetDelete(&delete_TElectron);
      instance.SetDeleteArray(&deleteArray_TElectron);
      instance.SetDestructor(&destruct_TElectron);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TElectron*)
   {
      return GenerateInitInstanceLocal((::TElectron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TElectron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParticleHj_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParticleHj(void *p = 0);
   static void *newArray_TParticleHj(Long_t size, void *p);
   static void delete_TParticleHj(void *p);
   static void deleteArray_TParticleHj(void *p);
   static void destruct_TParticleHj(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParticleHj*)
   {
      ::TParticleHj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParticleHj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParticleHj", ::TParticleHj::Class_Version(), ".sl53_gcc432/obj/StRoot/container/TParticleHj.h", 4,
                  typeid(::TParticleHj), DefineBehavior(ptr, ptr),
                  &::TParticleHj::Dictionary, isa_proxy, 4,
                  sizeof(::TParticleHj) );
      instance.SetNew(&new_TParticleHj);
      instance.SetNewArray(&newArray_TParticleHj);
      instance.SetDelete(&delete_TParticleHj);
      instance.SetDeleteArray(&deleteArray_TParticleHj);
      instance.SetDestructor(&destruct_TParticleHj);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParticleHj*)
   {
      return GenerateInitInstanceLocal((::TParticleHj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParticleHj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TParticleMc_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_TParticleMc(void *p = 0);
   static void *newArray_TParticleMc(Long_t size, void *p);
   static void delete_TParticleMc(void *p);
   static void deleteArray_TParticleMc(void *p);
   static void destruct_TParticleMc(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TParticleMc*)
   {
      ::TParticleMc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TParticleMc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TParticleMc", ::TParticleMc::Class_Version(), ".sl53_gcc432/obj/StRoot/container/TParticleMc.h", 4,
                  typeid(::TParticleMc), DefineBehavior(ptr, ptr),
                  &::TParticleMc::Dictionary, isa_proxy, 4,
                  sizeof(::TParticleMc) );
      instance.SetNew(&new_TParticleMc);
      instance.SetNewArray(&newArray_TParticleMc);
      instance.SetDelete(&delete_TParticleMc);
      instance.SetDeleteArray(&deleteArray_TParticleMc);
      instance.SetDestructor(&destruct_TParticleMc);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TParticleMc*)
   {
      return GenerateInitInstanceLocal((::TParticleMc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TParticleMc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TElectron::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TElectron::Class_Name()
{
   return "TElectron";
}

//______________________________________________________________________________
const char *TElectron::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TElectron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TElectron::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TElectron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TElectron::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TElectron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TElectron::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TElectron*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParticleHj::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParticleHj::Class_Name()
{
   return "TParticleHj";
}

//______________________________________________________________________________
const char *TParticleHj::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleHj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParticleHj::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleHj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParticleHj::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleHj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParticleHj::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleHj*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TParticleMc::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TParticleMc::Class_Name()
{
   return "TParticleMc";
}

//______________________________________________________________________________
const char *TParticleMc::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleMc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TParticleMc::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TParticleMc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TParticleMc::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleMc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TParticleMc::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TParticleMc*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TElectron::Streamer(TBuffer &R__b)
{
   // Stream an object of class TElectron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TElectron::Class(),this);
   } else {
      R__b.WriteClassBuffer(TElectron::Class(),this);
   }
}

//______________________________________________________________________________
void TElectron::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TElectron.
      TClass *R__cl = ::TElectron::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "px", &px);
      R__insp.Inspect(R__cl, R__parent, "py", &py);
      R__insp.Inspect(R__cl, R__parent, "pz", &pz);
      R__insp.Inspect(R__cl, R__parent, "x", &x);
      R__insp.Inspect(R__cl, R__parent, "y", &y);
      R__insp.Inspect(R__cl, R__parent, "z", &z);
      R__insp.Inspect(R__cl, R__parent, "energy", &energy);
      R__insp.Inspect(R__cl, R__parent, "KF", &KF);
      R__insp.Inspect(R__cl, R__parent, "KS", &KS);
      R__insp.Inspect(R__cl, R__parent, "ppx", &ppx);
      R__insp.Inspect(R__cl, R__parent, "ppy", &ppy);
      R__insp.Inspect(R__cl, R__parent, "ppz", &ppz);
      R__insp.Inspect(R__cl, R__parent, "xp", &xp);
      R__insp.Inspect(R__cl, R__parent, "yp", &yp);
      R__insp.Inspect(R__cl, R__parent, "zp", &zp);
      R__insp.Inspect(R__cl, R__parent, "penergy", &penergy);
      R__insp.Inspect(R__cl, R__parent, "pKF", &pKF);
      R__insp.Inspect(R__cl, R__parent, "pKS", &pKS);
      R__insp.Inspect(R__cl, R__parent, "pid", &pid);
      R__insp.Inspect(R__cl, R__parent, "aKF", &aKF);
      R__insp.Inspect(R__cl, R__parent, "accp", &accp);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TElectron(void *p) {
      return  p ? new(p) ::TElectron : new ::TElectron;
   }
   static void *newArray_TElectron(Long_t nElements, void *p) {
      return p ? new(p) ::TElectron[nElements] : new ::TElectron[nElements];
   }
   // Wrapper around operator delete
   static void delete_TElectron(void *p) {
      delete ((::TElectron*)p);
   }
   static void deleteArray_TElectron(void *p) {
      delete [] ((::TElectron*)p);
   }
   static void destruct_TElectron(void *p) {
      typedef ::TElectron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TElectron

//______________________________________________________________________________
void TParticleHj::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParticleHj.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParticleHj::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParticleHj::Class(),this);
   }
}

//______________________________________________________________________________
void TParticleHj::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParticleHj.
      TClass *R__cl = ::TParticleHj::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "b", &b);
      R__insp.Inspect(R__cl, R__parent, "px", &px);
      R__insp.Inspect(R__cl, R__parent, "py", &py);
      R__insp.Inspect(R__cl, R__parent, "pz", &pz);
      R__insp.Inspect(R__cl, R__parent, "x", &x);
      R__insp.Inspect(R__cl, R__parent, "y", &y);
      R__insp.Inspect(R__cl, R__parent, "z", &z);
      R__insp.Inspect(R__cl, R__parent, "energy", &energy);
      R__insp.Inspect(R__cl, R__parent, "KF", &KF);
      R__insp.Inspect(R__cl, R__parent, "KS", &KS);
      R__insp.Inspect(R__cl, R__parent, "ppx", &ppx);
      R__insp.Inspect(R__cl, R__parent, "ppy", &ppy);
      R__insp.Inspect(R__cl, R__parent, "ppz", &ppz);
      R__insp.Inspect(R__cl, R__parent, "xp", &xp);
      R__insp.Inspect(R__cl, R__parent, "yp", &yp);
      R__insp.Inspect(R__cl, R__parent, "zp", &zp);
      R__insp.Inspect(R__cl, R__parent, "penergy", &penergy);
      R__insp.Inspect(R__cl, R__parent, "pKF", &pKF);
      R__insp.Inspect(R__cl, R__parent, "pKS", &pKS);
      R__insp.Inspect(R__cl, R__parent, "pid", &pid);
      R__insp.Inspect(R__cl, R__parent, "aKF", &aKF);
      R__insp.Inspect(R__cl, R__parent, "accp", &accp);
      TNamed::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParticleHj(void *p) {
      return  p ? new(p) ::TParticleHj : new ::TParticleHj;
   }
   static void *newArray_TParticleHj(Long_t nElements, void *p) {
      return p ? new(p) ::TParticleHj[nElements] : new ::TParticleHj[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParticleHj(void *p) {
      delete ((::TParticleHj*)p);
   }
   static void deleteArray_TParticleHj(void *p) {
      delete [] ((::TParticleHj*)p);
   }
   static void destruct_TParticleHj(void *p) {
      typedef ::TParticleHj current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParticleHj

//______________________________________________________________________________
void TParticleMc::Streamer(TBuffer &R__b)
{
   // Stream an object of class TParticleMc.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TParticleMc::Class(),this);
   } else {
      R__b.WriteClassBuffer(TParticleMc::Class(),this);
   }
}

//______________________________________________________________________________
void TParticleMc::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class TParticleMc.
      TClass *R__cl = ::TParticleMc::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "px", &px);
      R__insp.Inspect(R__cl, R__parent, "py", &py);
      R__insp.Inspect(R__cl, R__parent, "pz", &pz);
      R__insp.Inspect(R__cl, R__parent, "pt", &pt);
      R__insp.Inspect(R__cl, R__parent, "eta", &eta);
      R__insp.Inspect(R__cl, R__parent, "x", &x);
      R__insp.Inspect(R__cl, R__parent, "y", &y);
      R__insp.Inspect(R__cl, R__parent, "z", &z);
      R__insp.Inspect(R__cl, R__parent, "energy", &energy);
      R__insp.Inspect(R__cl, R__parent, "KF", &KF);
      R__insp.Inspect(R__cl, R__parent, "KS", &KS);
      R__insp.Inspect(R__cl, R__parent, "ppx", &ppx);
      R__insp.Inspect(R__cl, R__parent, "ppy", &ppy);
      R__insp.Inspect(R__cl, R__parent, "ppz", &ppz);
      R__insp.Inspect(R__cl, R__parent, "xp", &xp);
      R__insp.Inspect(R__cl, R__parent, "yp", &yp);
      R__insp.Inspect(R__cl, R__parent, "zp", &zp);
      R__insp.Inspect(R__cl, R__parent, "penergy", &penergy);
      R__insp.Inspect(R__cl, R__parent, "pKF", &pKF);
      R__insp.Inspect(R__cl, R__parent, "pKS", &pKS);
      R__insp.Inspect(R__cl, R__parent, "parentId", &parentId);
      R__insp.Inspect(R__cl, R__parent, "phi", &phi);
      TObject::ShowMembers(R__insp, R__parent);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TParticleMc(void *p) {
      return  p ? new(p) ::TParticleMc : new ::TParticleMc;
   }
   static void *newArray_TParticleMc(Long_t nElements, void *p) {
      return p ? new(p) ::TParticleMc[nElements] : new ::TParticleMc[nElements];
   }
   // Wrapper around operator delete
   static void delete_TParticleMc(void *p) {
      delete ((::TParticleMc*)p);
   }
   static void deleteArray_TParticleMc(void *p) {
      delete [] ((::TParticleMc*)p);
   }
   static void destruct_TParticleMc(void *p) {
      typedef ::TParticleMc current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TParticleMc

/********************************************************
* .sl53_gcc432/obj/StRoot/container/container_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablecontainer_Cint();

extern "C" void G__set_cpp_environmentcontainer_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TElectron.h");
  G__add_compiledheader("TParticleHj.h");
  G__add_compiledheader("TParticleMc.h");
  G__cpp_reset_tagtablecontainer_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevcontainer_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TElectron */
static int G__container_Cint_157_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TElectron[n];
     } else {
       p = new((void*) gvp) TElectron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TElectron;
     } else {
       p = new((void*) gvp) TElectron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TElectron(*(TElectron*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TElectron(*(TElectron*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TElectron* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TElectron(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const int) G__int(libp->para[7])
, (const int) G__int(libp->para[8]), (const float) G__double(libp->para[9])
, (const float) G__double(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const int) G__int(libp->para[16]), (const int) G__int(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const bool) G__int(libp->para[20]));
   } else {
     p = new((void*) gvp) TElectron(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const int) G__int(libp->para[7])
, (const int) G__int(libp->para[8]), (const float) G__double(libp->para[9])
, (const float) G__double(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const int) G__int(libp->para[16]), (const int) G__int(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const bool) G__int(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_KF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_KS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_ppx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_ppy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_ppz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_xp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_yp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_zp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TElectron*) G__getstructoffset())->get_penergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_pKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_pKS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TElectron*) G__getstructoffset())->get_aKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TElectron*) G__getstructoffset())->get_accp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TElectron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TElectron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TElectron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TElectron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TElectron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TElectron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TElectron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TElectron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_157_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TElectron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TElectron G__TTElectron;
static int G__container_Cint_157_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TElectron*) (soff+(sizeof(TElectron)*i)))->~G__TTElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TElectron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TElectron*) (soff))->~G__TTElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__container_Cint_157_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TElectron* dest = (TElectron*) G__getstructoffset();
   *dest = *(TElectron*) libp->para[0].ref;
   const TElectron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParticleHj */
static int G__container_Cint_158_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleHj* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticleHj[n];
     } else {
       p = new((void*) gvp) TParticleHj[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticleHj;
     } else {
       p = new((void*) gvp) TParticleHj;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleHj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleHj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticleHj(*(TParticleHj*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TParticleHj(*(TParticleHj*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleHj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleHj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 22
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticleHj(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const float) G__double(libp->para[7])
, (const int) G__int(libp->para[8]), (const int) G__int(libp->para[9])
, (const float) G__double(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const float) G__double(libp->para[16]), (const int) G__int(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const int) G__int(libp->para[20]), (const bool) G__int(libp->para[21]));
   } else {
     p = new((void*) gvp) TParticleHj(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const float) G__double(libp->para[7])
, (const int) G__int(libp->para[8]), (const int) G__int(libp->para[9])
, (const float) G__double(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const float) G__double(libp->para[16]), (const int) G__int(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const int) G__int(libp->para[20]), (const bool) G__int(libp->para[21]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleHj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_b());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_KF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_KS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_ppx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_ppy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_ppz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_xp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_yp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_zp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleHj*) G__getstructoffset())->get_penergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_pKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_pKS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_pid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleHj*) G__getstructoffset())->get_aKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TParticleHj*) G__getstructoffset())->get_accp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParticleHj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleHj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParticleHj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParticleHj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticleHj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleHj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleHj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleHj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_158_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleHj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParticleHj G__TTParticleHj;
static int G__container_Cint_158_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParticleHj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParticleHj*) (soff+(sizeof(TParticleHj)*i)))->~G__TTParticleHj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParticleHj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParticleHj*) (soff))->~G__TTParticleHj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__container_Cint_158_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleHj* dest = (TParticleHj*) G__getstructoffset();
   *dest = *(TParticleHj*) libp->para[0].ref;
   const TParticleHj& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TParticleMc */
static int G__container_Cint_159_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleMc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticleMc[n];
     } else {
       p = new((void*) gvp) TParticleMc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TParticleMc;
     } else {
       p = new((void*) gvp) TParticleMc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleMc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleMc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticleMc(*(TParticleMc*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TParticleMc(*(TParticleMc*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleMc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleMc* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 21
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TParticleMc(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const float) G__double(libp->para[7])
, (const float) G__double(libp->para[8]), (const int) G__int(libp->para[9])
, (const int) G__int(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const float) G__double(libp->para[16]), (const float) G__double(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const int) G__int(libp->para[20]));
   } else {
     p = new((void*) gvp) TParticleMc(
(const float) G__double(libp->para[0]), (const float) G__double(libp->para[1])
, (const float) G__double(libp->para[2]), (const float) G__double(libp->para[3])
, (const float) G__double(libp->para[4]), (const float) G__double(libp->para[5])
, (const float) G__double(libp->para[6]), (const float) G__double(libp->para[7])
, (const float) G__double(libp->para[8]), (const int) G__int(libp->para[9])
, (const int) G__int(libp->para[10]), (const float) G__double(libp->para[11])
, (const float) G__double(libp->para[12]), (const float) G__double(libp->para[13])
, (const float) G__double(libp->para[14]), (const float) G__double(libp->para[15])
, (const float) G__double(libp->para[16]), (const float) G__double(libp->para[17])
, (const int) G__int(libp->para[18]), (const int) G__int(libp->para[19])
, (const int) G__int(libp->para[20]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__container_CintLN_TParticleMc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_px());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_py());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_pz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_pt());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_eta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_x());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_energy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleMc*) G__getstructoffset())->get_KF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleMc*) G__getstructoffset())->get_KS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_ppx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_ppy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_ppz());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_xp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_yp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_zp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TParticleMc*) G__getstructoffset())->get_penergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((TParticleMc*) G__getstructoffset())->get_phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleMc*) G__getstructoffset())->get_pKF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleMc*) G__getstructoffset())->get_pKS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TParticleMc*) G__getstructoffset())->get_parentId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticleMc*) G__getstructoffset())->set_phi((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TParticleMc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleMc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TParticleMc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TParticleMc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TParticleMc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleMc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleMc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TParticleMc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__container_Cint_159_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TParticleMc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TParticleMc G__TTParticleMc;
static int G__container_Cint_159_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TParticleMc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TParticleMc*) (soff+(sizeof(TParticleMc)*i)))->~G__TTParticleMc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TParticleMc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TParticleMc*) (soff))->~G__TTParticleMc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__container_Cint_159_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TParticleMc* dest = (TParticleMc*) G__getstructoffset();
   *dest = *(TParticleMc*) libp->para[0].ref;
   const TParticleMc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TElectron */

/* TParticleHj */

/* TParticleMc */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunccontainer_Cint {
 public:
  G__Sizep2memfunccontainer_Cint(): p(&G__Sizep2memfunccontainer_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunccontainer_Cint::*p)();
};

size_t G__get_sizep2memfunccontainer_Cint()
{
  G__Sizep2memfunccontainer_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancecontainer_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__container_CintLN_TElectron))) {
     TElectron *G__Lderived;
     G__Lderived=(TElectron*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__container_CintLN_TElectron),G__get_linked_tagnum(&G__container_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__container_CintLN_TElectron),G__get_linked_tagnum(&G__container_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__container_CintLN_TParticleHj))) {
     TParticleHj *G__Lderived;
     G__Lderived=(TParticleHj*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleHj),G__get_linked_tagnum(&G__container_CintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleHj),G__get_linked_tagnum(&G__container_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__container_CintLN_TParticleMc))) {
     TParticleMc *G__Lderived;
     G__Lderived=(TParticleMc*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleMc),G__get_linked_tagnum(&G__container_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablecontainer_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__container_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__container_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TElectron */
static void G__setup_memvarTElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__container_CintLN_TElectron));
   { TElectron *p; p=(TElectron*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"x=",0,".. origin ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppx=",0,". parent px");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"xp=",0,".. parent origin");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"yp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"zp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"penergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pid=",0,".. parent track id");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"aKF=",0,".. is it from ccbar, bbar or Drell-Yan");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"accp=",0,".. reconstructed by TPC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__container_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParticleHj */
static void G__setup_memvarTParticleHj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleHj));
   { TParticleHj *p; p=(TParticleHj*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"b=",0,".. impact parameter");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"x=",0,".. origin ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppx=",0,". parent px");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"xp=",0,".. parent origin");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"yp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"zp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"penergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pid=",0,".. parent track id");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"aKF=",0,".. is it from ccbar, bbar or Drell-Yan");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"accp=",0,".. reconstructed by TPC");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__container_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TParticleMc */
static void G__setup_memvarTParticleMc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleMc));
   { TParticleMc *p; p=(TParticleMc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"px=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"py=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"x=",0,".. origin ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"z=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"KS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppx=",0,". parent px");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"ppz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"xp=",0,".. parent origin");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"yp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"zp=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"penergy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKF=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pKS=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"parentId=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__container_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarcontainer_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTElectron(void) {
   /* TElectron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__container_CintLN_TElectron));
   G__memfunc_setup("TElectron",912,G__container_Cint_157_0_1, 105, G__get_linked_tagnum(&G__container_CintLN_TElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TElectron",912,G__container_Cint_157_0_2, 105, G__get_linked_tagnum(&G__container_CintLN_TElectron), -1, 0, 1, 1, 1, 0, "u 'TElectron' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TElectron",912,G__container_Cint_157_0_3, 105, G__get_linked_tagnum(&G__container_CintLN_TElectron), -1, 0, 21, 1, 1, 0, 
"f - - 10 - px_in f - - 10 - py_in "
"f - - 10 - pz_in f - - 10 - x_in "
"f - - 10 - y_in f - - 10 - z_in "
"f - - 10 - energy_in i - - 10 - KF_in "
"i - - 10 - KS_in f - - 10 - ppx_in "
"f - - 10 - ppy_in f - - 10 - ppz_in "
"f - - 10 - xp_in f - - 10 - yp_in "
"f - - 10 - zp_in f - - 10 - penergy_in "
"i - - 10 - pKF_in i - - 10 - pKS_in "
"i - - 10 - pid_in i - - 10 - aKF_in "
"g - - 10 - accp_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_px",647,G__container_Cint_157_0_4, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_py",648,G__container_Cint_157_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pz",649,G__container_Cint_157_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__container_Cint_157_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__container_Cint_157_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_z",537,G__container_Cint_157_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_energy",1065,G__container_Cint_157_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KF",560,G__container_Cint_157_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KS",573,G__container_Cint_157_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppx",759,G__container_Cint_157_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppy",760,G__container_Cint_157_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppz",761,G__container_Cint_157_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_xp",647,G__container_Cint_157_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_yp",648,G__container_Cint_157_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_zp",649,G__container_Cint_157_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_penergy",1177,G__container_Cint_157_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKF",672,G__container_Cint_157_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKS",685,G__container_Cint_157_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pid",732,G__container_Cint_157_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_aKF",657,G__container_Cint_157_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_accp",822,G__container_Cint_157_0_24, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__container_Cint_157_0_25, 85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TElectron::Class), 0);
   G__memfunc_setup("Class_Name",982,G__container_Cint_157_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TElectron::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__container_Cint_157_0_27, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TElectron::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__container_Cint_157_0_28, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TElectron::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__container_Cint_157_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__container_Cint_157_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TElectron::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__container_Cint_157_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TElectron::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__container_Cint_157_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TElectron::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__container_Cint_157_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TElectron::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TElectron", 1038, G__container_Cint_157_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__container_Cint_157_0_38, (int) ('u'), G__get_linked_tagnum(&G__container_CintLN_TElectron), -1, 1, 1, 1, 1, 0, "u 'TElectron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParticleHj(void) {
   /* TParticleHj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleHj));
   G__memfunc_setup("TParticleHj",1082,G__container_Cint_158_0_1, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleHj), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticleHj",1082,G__container_Cint_158_0_2, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleHj), -1, 0, 1, 1, 1, 0, "u 'TParticleHj' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticleHj",1082,G__container_Cint_158_0_3, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleHj), -1, 0, 22, 1, 1, 0, 
"f - - 10 - b_in f - - 10 - px_in "
"f - - 10 - py_in f - - 10 - pz_in "
"f - - 10 - x_in f - - 10 - y_in "
"f - - 10 - z_in f - - 10 - energy_in "
"i - - 10 - KF_in i - - 10 - KS_in "
"f - - 10 - ppx_in f - - 10 - ppy_in "
"f - - 10 - ppz_in f - - 10 - xp_in "
"f - - 10 - yp_in f - - 10 - zp_in "
"f - - 10 - penergy_in i - - 10 - pKF_in "
"i - - 10 - pKS_in i - - 10 - pid_in "
"i - - 10 - aKF_in g - - 10 - accp_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_b",513,G__container_Cint_158_0_4, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_px",647,G__container_Cint_158_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_py",648,G__container_Cint_158_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pz",649,G__container_Cint_158_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__container_Cint_158_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__container_Cint_158_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_z",537,G__container_Cint_158_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_energy",1065,G__container_Cint_158_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KF",560,G__container_Cint_158_0_12, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KS",573,G__container_Cint_158_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppx",759,G__container_Cint_158_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppy",760,G__container_Cint_158_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppz",761,G__container_Cint_158_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_xp",647,G__container_Cint_158_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_yp",648,G__container_Cint_158_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_zp",649,G__container_Cint_158_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_penergy",1177,G__container_Cint_158_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKF",672,G__container_Cint_158_0_21, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKS",685,G__container_Cint_158_0_22, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pid",732,G__container_Cint_158_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_aKF",657,G__container_Cint_158_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_accp",822,G__container_Cint_158_0_25, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__container_Cint_158_0_26, 85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TParticleHj::Class), 0);
   G__memfunc_setup("Class_Name",982,G__container_Cint_158_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleHj::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__container_Cint_158_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TParticleHj::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__container_Cint_158_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TParticleHj::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__container_Cint_158_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__container_Cint_158_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleHj::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__container_Cint_158_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TParticleHj::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__container_Cint_158_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleHj::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__container_Cint_158_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TParticleHj::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TParticleHj", 1208, G__container_Cint_158_0_38, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__container_Cint_158_0_39, (int) ('u'), G__get_linked_tagnum(&G__container_CintLN_TParticleHj), -1, 1, 1, 1, 1, 0, "u 'TParticleHj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTParticleMc(void) {
   /* TParticleMc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleMc));
   G__memfunc_setup("TParticleMc",1080,G__container_Cint_159_0_1, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleMc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticleMc",1080,G__container_Cint_159_0_2, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleMc), -1, 0, 1, 1, 1, 0, "u 'TParticleMc' - 11 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TParticleMc",1080,G__container_Cint_159_0_3, 105, G__get_linked_tagnum(&G__container_CintLN_TParticleMc), -1, 0, 21, 1, 1, 0, 
"f - - 10 - px_in f - - 10 - py_in "
"f - - 10 - pz_in f - - 10 - pt_in "
"f - - 10 - eta_in f - - 10 - x_in "
"f - - 10 - y_in f - - 10 - z_in "
"f - - 10 - energy_in i - - 10 - KF_in "
"i - - 10 - KS_in f - - 10 - ppx_in "
"f - - 10 - ppy_in f - - 10 - ppz_in "
"f - - 10 - xp_in f - - 10 - yp_in "
"f - - 10 - zp_in f - - 10 - penergy_in "
"i - - 10 - pKF_in i - - 10 - pKS_in "
"i - - 10 - parentId_in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_px",647,G__container_Cint_159_0_4, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_py",648,G__container_Cint_159_0_5, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pz",649,G__container_Cint_159_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pt",643,G__container_Cint_159_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_eta",729,G__container_Cint_159_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_x",535,G__container_Cint_159_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_y",536,G__container_Cint_159_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_z",537,G__container_Cint_159_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_energy",1065,G__container_Cint_159_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KF",560,G__container_Cint_159_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_KS",573,G__container_Cint_159_0_14, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppx",759,G__container_Cint_159_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppy",760,G__container_Cint_159_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_ppz",761,G__container_Cint_159_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_xp",647,G__container_Cint_159_0_18, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_yp",648,G__container_Cint_159_0_19, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_zp",649,G__container_Cint_159_0_20, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_penergy",1177,G__container_Cint_159_0_21, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_phi",736,G__container_Cint_159_0_22, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKF",672,G__container_Cint_159_0_23, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_pKS",685,G__container_Cint_159_0_24, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get_parentId",1238,G__container_Cint_159_0_25, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_phi",748,G__container_Cint_159_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__container_Cint_159_0_27, 85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&TParticleMc::Class), 0);
   G__memfunc_setup("Class_Name",982,G__container_Cint_159_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleMc::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__container_Cint_159_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&TParticleMc::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__container_Cint_159_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&TParticleMc::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__container_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__container_Cint_159_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__container_Cint_159_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleMc::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__container_Cint_159_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TParticleMc::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__container_Cint_159_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&TParticleMc::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__container_Cint_159_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&TParticleMc::DeclFileLine), 0);
   // automatic destructor
   G__memfunc_setup("~TParticleMc", 1206, G__container_Cint_159_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__container_Cint_159_0_40, (int) ('u'), G__get_linked_tagnum(&G__container_CintLN_TParticleMc), -1, 1, 1, 1, 1, 0, "u 'TParticleMc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunccontainer_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalcontainer_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funccontainer_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__container_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__container_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TElectron = { "TElectron" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TParticleHj = { "TParticleHj" , 99 , -1 };
G__linked_taginfo G__container_CintLN_TParticleMc = { "TParticleMc" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablecontainer_Cint() {
  G__container_CintLN_TClass.tagnum = -1 ;
  G__container_CintLN_TBuffer.tagnum = -1 ;
  G__container_CintLN_TMemberInspector.tagnum = -1 ;
  G__container_CintLN_TObject.tagnum = -1 ;
  G__container_CintLN_TNamed.tagnum = -1 ;
  G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__container_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__container_CintLN_TElectron.tagnum = -1 ;
  G__container_CintLN_TParticleHj.tagnum = -1 ;
  G__container_CintLN_TParticleMc.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablecontainer_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__container_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__container_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__container_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__container_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__container_CintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__container_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__container_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__container_CintLN_TElectron),sizeof(TElectron),-1,324352,(char*)NULL,G__setup_memvarTElectron,G__setup_memfuncTElectron);
   G__tagtable_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleHj),sizeof(TParticleHj),-1,324352,(char*)NULL,G__setup_memvarTParticleHj,G__setup_memfuncTParticleHj);
   G__tagtable_setup(G__get_linked_tagnum(&G__container_CintLN_TParticleMc),sizeof(TParticleMc),-1,324352,(char*)NULL,G__setup_memvarTParticleMc,G__setup_memfuncTParticleMc);
}
extern "C" void G__cpp_setupcontainer_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupcontainer_Cint()");
  G__set_cpp_environmentcontainer_Cint();
  G__cpp_setup_tagtablecontainer_Cint();

  G__cpp_setup_inheritancecontainer_Cint();

  G__cpp_setup_typetablecontainer_Cint();

  G__cpp_setup_memvarcontainer_Cint();

  G__cpp_setup_memfunccontainer_Cint();
  G__cpp_setup_globalcontainer_Cint();
  G__cpp_setup_funccontainer_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunccontainer_Cint();
  return;
}
class G__cpp_setup_initcontainer_Cint {
  public:
    G__cpp_setup_initcontainer_Cint() { G__add_setup_func("container_Cint",(G__incsetup)(&G__cpp_setupcontainer_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initcontainer_Cint() { G__remove_setup_func("container_Cint"); }
};
G__cpp_setup_initcontainer_Cint G__cpp_setup_initializercontainer_Cint;

