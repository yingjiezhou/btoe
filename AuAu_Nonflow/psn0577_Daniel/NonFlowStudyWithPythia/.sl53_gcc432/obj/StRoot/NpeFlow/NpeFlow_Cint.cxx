//
// File generated by rootcint at Wed May 29 09:56:31 2013

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "NpeFlow_Cint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void NpeFlow_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_NpeFlow(void *p = 0);
   static void *newArray_NpeFlow(Long_t size, void *p);
   static void delete_NpeFlow(void *p);
   static void deleteArray_NpeFlow(void *p);
   static void destruct_NpeFlow(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::NpeFlow*)
   {
      ::NpeFlow *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::NpeFlow >(0);
      static ::ROOT::TGenericClassInfo 
         instance("NpeFlow", ::NpeFlow::Class_Version(), ".sl53_gcc432/obj/StRoot/NpeFlow/NpeFlowAna.h", 24,
                  typeid(::NpeFlow), DefineBehavior(ptr, ptr),
                  &::NpeFlow::Dictionary, isa_proxy, 4,
                  sizeof(::NpeFlow) );
      instance.SetNew(&new_NpeFlow);
      instance.SetNewArray(&newArray_NpeFlow);
      instance.SetDelete(&delete_NpeFlow);
      instance.SetDeleteArray(&deleteArray_NpeFlow);
      instance.SetDestructor(&destruct_NpeFlow);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::NpeFlow*)
   {
      return GenerateInitInstanceLocal((::NpeFlow*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::NpeFlow*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *NpeFlow::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *NpeFlow::Class_Name()
{
   return "NpeFlow";
}

//______________________________________________________________________________
const char *NpeFlow::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NpeFlow*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int NpeFlow::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::NpeFlow*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void NpeFlow::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NpeFlow*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *NpeFlow::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::NpeFlow*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void NpeFlow::Streamer(TBuffer &R__b)
{
   // Stream an object of class NpeFlow.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(NpeFlow::Class(),this);
   } else {
      R__b.WriteClassBuffer(NpeFlow::Class(),this);
   }
}

//______________________________________________________________________________
void NpeFlow::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class NpeFlow.
      TClass *R__cl = ::NpeFlow::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "*pt_ele", &pt_ele);
      R__insp.Inspect(R__cl, R__parent, "*pt_had", &pt_had);
      R__insp.Inspect(R__cl, R__parent, "*pt_K", &pt_K);
      R__insp.Inspect(R__cl, R__parent, "*pt_pi", &pt_pi);
      R__insp.Inspect(R__cl, R__parent, "*pt_p", &pt_p);
      R__insp.Inspect(R__cl, R__parent, "*eta_ele", &eta_ele);
      R__insp.Inspect(R__cl, R__parent, "*eta_had", &eta_had);
      R__insp.Inspect(R__cl, R__parent, "*eta_K", &eta_K);
      R__insp.Inspect(R__cl, R__parent, "*eta_pi", &eta_pi);
      R__insp.Inspect(R__cl, R__parent, "*eta_p", &eta_p);
      R__insp.Inspect(R__cl, R__parent, "*ele_parent", &ele_parent);
      R__insp.Inspect(R__cl, R__parent, "*had_parent", &had_parent);
      R__insp.Inspect(R__cl, R__parent, "*hEvenCounter", &hEvenCounter);
      R__insp.Inspect(R__cl, R__parent, "pT_cut", &pT_cut);
      R__insp.Inspect(R__cl, R__parent, "eta_cut", &eta_cut);
      R__insp.Inspect(R__cl, R__parent, "eta_ele_cut", &eta_ele_cut);
      R__insp.Inspect(R__cl, R__parent, "pTtrigger", &pTtrigger);
      R__insp.Inspect(R__cl, R__parent, "*outFileName", &outFileName);
      R__insp.Inspect(R__cl, R__parent, "*mTrgEffFileName", &mTrgEffFileName);
      R__insp.Inspect(R__cl, R__parent, "*mKaonRecoEffFileName", &mKaonRecoEffFileName);
      R__insp.Inspect(R__cl, R__parent, "*mPionRecoEffFileName", &mPionRecoEffFileName);
      R__insp.Inspect(R__cl, R__parent, "*mProtonRecoEffFileName", &mProtonRecoEffFileName);
      R__insp.Inspect(R__cl, R__parent, "*incEle_M2_2part[12]", &incEle_M2_2part);
      R__insp.Inspect(R__cl, R__parent, "*refFlow_M2_2part", &refFlow_M2_2part);
      R__insp.Inspect(R__cl, R__parent, "*refFlowTrackMult", &refFlowTrackMult);
      R__insp.Inspect(R__cl, R__parent, "*mHtTriggerEff", &mHtTriggerEff);
      R__insp.Inspect(R__cl, R__parent, "*mKaonRecoEff", &mKaonRecoEff);
      R__insp.Inspect(R__cl, R__parent, "*mPionRecoEff", &mPionRecoEff);
      R__insp.Inspect(R__cl, R__parent, "*mProtonRecoEff", &mProtonRecoEff);
      R__insp.Inspect(R__cl, R__parent, "*mRandGen", &mRandGen);
      R__insp.Inspect(R__cl, R__parent, "cos2phi_RefFlow", &cos2phi_RefFlow);
      R__insp.Inspect(R__cl, R__parent, "sin2phi_RefFlow", &sin2phi_RefFlow);
      R__insp.Inspect(R__cl, R__parent, "multRefFlow", &multRefFlow);
      R__insp.Inspect(R__cl, R__parent, "inc_ele_cos_2phi_cent_pT_bins[12]", inc_ele_cos_2phi_cent_pT_bins);
      R__insp.Inspect(R__cl, R__parent, "inc_ele_sin_2phi_cent_pT_bins[12]", inc_ele_sin_2phi_cent_pT_bins);
      R__insp.Inspect(R__cl, R__parent, "inc_ele_mult_pT_bins[12]", inc_ele_mult_pT_bins);
      R__insp.Inspect(R__cl, R__parent, "anaBottom", &anaBottom);
      R__insp.Inspect(R__cl, R__parent, "anaCharm", &anaCharm);
      R__insp.Inspect(R__cl, R__parent, "useTriggeredData", &useTriggeredData);
      R__insp.Inspect(R__cl, R__parent, "hasTrigger", &hasTrigger);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_NpeFlow(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::NpeFlow : new ::NpeFlow;
   }
   static void *newArray_NpeFlow(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::NpeFlow[nElements] : new ::NpeFlow[nElements];
   }
   // Wrapper around operator delete
   static void delete_NpeFlow(void *p) {
      delete ((::NpeFlow*)p);
   }
   static void deleteArray_NpeFlow(void *p) {
      delete [] ((::NpeFlow*)p);
   }
   static void destruct_NpeFlow(void *p) {
      typedef ::NpeFlow current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::NpeFlow

/********************************************************
* .sl53_gcc432/obj/StRoot/NpeFlow/NpeFlow_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableNpeFlow_Cint();

extern "C" void G__set_cpp_environmentNpeFlow_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("NpeFlowAna.h");
  G__cpp_reset_tagtableNpeFlow_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevNpeFlow_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* NpeFlow */
static int G__NpeFlow_Cint_151_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   NpeFlow* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NpeFlow[n];
     } else {
       p = new((void*) gvp) NpeFlow[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new NpeFlow;
     } else {
       p = new((void*) gvp) NpeFlow;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->calculate((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->fillPtSpectra((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setTriggerPt((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setParentId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setPtCut((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setEtaCut((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->showCuts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setOutFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setHtTrigEffFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setKaonRecoEffFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setPionRecoEffFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setProtonRecoEffFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setAnaBottom((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->setAnaCharm((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NpeFlow*) G__getstructoffset())->getAnaBottom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((NpeFlow*) G__getstructoffset())->getAnaCharm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) NpeFlow::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NpeFlow::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) NpeFlow::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      NpeFlow::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const NpeFlow*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref, (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((NpeFlow*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NpeFlow::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NpeFlow::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) NpeFlow::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__NpeFlow_Cint_151_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NpeFlow::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__NpeFlow_Cint_151_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   NpeFlow* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new NpeFlow(*(NpeFlow*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef NpeFlow G__TNpeFlow;
static int G__NpeFlow_Cint_151_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (NpeFlow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((NpeFlow*) (soff+(sizeof(NpeFlow)*i)))->~G__TNpeFlow();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (NpeFlow*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((NpeFlow*) (soff))->~G__TNpeFlow();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* NpeFlow */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncNpeFlow_Cint {
 public:
  G__Sizep2memfuncNpeFlow_Cint(): p(&G__Sizep2memfuncNpeFlow_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncNpeFlow_Cint::*p)();
};

size_t G__get_sizep2memfuncNpeFlow_Cint()
{
  G__Sizep2memfuncNpeFlow_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceNpeFlow_Cint() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableNpeFlow_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<TSchemaHelper>",117,G__get_linked_tagnum(&G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__NpeFlow_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__NpeFlow_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* NpeFlow */
static void G__setup_memvarNpeFlow(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow));
   { NpeFlow *p; p=(NpeFlow*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"pt_ele=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"pt_had=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"pt_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"pt_pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"pt_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"eta_ele=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"eta_had=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"eta_K=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"eta_pi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"eta_p=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"ele_parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"had_parent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"hEvenCounter=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pT_cut=",0,".. acceptance cuts");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"eta_ele_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"pTtrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"outFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"mTrgEffFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"mKaonRecoEffFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"mPionRecoEffFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"mProtonRecoEffFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"incEle_M2_2part[12]=",0,".. inclusive electrons");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"refFlow_M2_2part=",0,".. reference flow");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TH1F),-1,-1,4,"refFlowTrackMult=",0,".. reference flow");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TGraph),-1,-1,4,"mHtTriggerEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TGraph),-1,-1,4,"mKaonRecoEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TGraph),-1,-1,4,"mPionRecoEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TGraph),-1,-1,4,"mProtonRecoEff=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TRandom),-1,-1,4,"mRandGen=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cos2phi_RefFlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"sin2phi_RefFlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"multRefFlow=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"inc_ele_cos_2phi_cent_pT_bins[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"inc_ele_sin_2phi_cent_pT_bins[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"inc_ele_mult_pT_bins[12]=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"anaBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"anaCharm=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"useTriggeredData=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"hasTrigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__NpeFlow_CintLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarNpeFlow_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncNpeFlow(void) {
   /* NpeFlow */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow));
   G__memfunc_setup("acceptedTrack",1326,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 4, 0, 
"f - - 0 - pT f - - 0 - eta "
"i - - 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("acceptedHtEvent",1527,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "f - - 0 - elePt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineFlowArrays",1653,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteFlowArrays",1661,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineFlowHist",1435,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteHist",931,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcRefFlow_M2_2Part",1870,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcEleMoments",1420,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find_pt_bin",1148,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "f - - 0 - pT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isHeavyMesonProd",1648,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - kf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NpeFlow",699,G__NpeFlow_Cint_151_0_12, 105, G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculate",942,G__NpeFlow_Cint_151_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - startFile i - - 0 - endFile "
"i - - 0 - maxEvent C - - 0 - ndstlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillPtSpectra",1341,G__NpeFlow_Cint_151_0_14, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - startFile i - - 0 - endFile "
"i - - 0 - maxEvent C - - 0 - ndstlist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerPt",1252,G__NpeFlow_Cint_151_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParentId",1123,G__NpeFlow_Cint_151_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPtCut",828,G__NpeFlow_Cint_151_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEtaCut",914,G__NpeFlow_Cint_151_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showCuts",864,G__NpeFlow_Cint_151_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutFileName",1413,G__NpeFlow_Cint_151_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHtTrigEffFileName",1968,G__NpeFlow_Cint_151_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setKaonRecoEffFileName",2160,G__NpeFlow_Cint_151_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPionRecoEffFileName",2173,G__NpeFlow_Cint_151_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setProtonRecoEffFileName",2409,G__NpeFlow_Cint_151_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAnaBottom",1233,G__NpeFlow_Cint_151_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAnaCharm",1095,G__NpeFlow_Cint_151_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnaBottom",1221,G__NpeFlow_Cint_151_0_27, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnaCharm",1083,G__NpeFlow_Cint_151_0_28, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__NpeFlow_Cint_151_0_29, 85, G__get_linked_tagnum(&G__NpeFlow_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&NpeFlow::Class), 0);
   G__memfunc_setup("Class_Name",982,G__NpeFlow_Cint_151_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NpeFlow::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__NpeFlow_Cint_151_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&NpeFlow::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__NpeFlow_Cint_151_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&NpeFlow::Dictionary), 0);
   G__memfunc_setup("IsA",253,G__NpeFlow_Cint_151_0_33, 85, G__get_linked_tagnum(&G__NpeFlow_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__NpeFlow_Cint_151_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__NpeFlow_Cint_151_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__NpeFlow_Cint_151_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__NpeFlow_Cint_151_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NpeFlow::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__NpeFlow_Cint_151_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&NpeFlow::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__NpeFlow_Cint_151_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&NpeFlow::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__NpeFlow_Cint_151_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&NpeFlow::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("NpeFlow", 699, G__NpeFlow_Cint_151_0_41, (int) ('i'), G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow), -1, 0, 1, 1, 1, 0, "u 'NpeFlow' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~NpeFlow", 825, G__NpeFlow_Cint_151_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncNpeFlow_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalNpeFlow_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcNpeFlow_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__NpeFlow_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_TRandom = { "TRandom" , 99 , -1 };
G__linked_taginfo G__NpeFlow_CintLN_NpeFlow = { "NpeFlow" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableNpeFlow_Cint() {
  G__NpeFlow_CintLN_TClass.tagnum = -1 ;
  G__NpeFlow_CintLN_TBuffer.tagnum = -1 ;
  G__NpeFlow_CintLN_TMemberInspector.tagnum = -1 ;
  G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__NpeFlow_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__NpeFlow_CintLN_TH1F.tagnum = -1 ;
  G__NpeFlow_CintLN_TGraph.tagnum = -1 ;
  G__NpeFlow_CintLN_TRandom.tagnum = -1 ;
  G__NpeFlow_CintLN_NpeFlow.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableNpeFlow_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TH1F);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TGraph);
   G__get_linked_tagnum_fwd(&G__NpeFlow_CintLN_TRandom);
   G__tagtable_setup(G__get_linked_tagnum(&G__NpeFlow_CintLN_NpeFlow),sizeof(NpeFlow),-1,263424,(char*)NULL,G__setup_memvarNpeFlow,G__setup_memfuncNpeFlow);
}
extern "C" void G__cpp_setupNpeFlow_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupNpeFlow_Cint()");
  G__set_cpp_environmentNpeFlow_Cint();
  G__cpp_setup_tagtableNpeFlow_Cint();

  G__cpp_setup_inheritanceNpeFlow_Cint();

  G__cpp_setup_typetableNpeFlow_Cint();

  G__cpp_setup_memvarNpeFlow_Cint();

  G__cpp_setup_memfuncNpeFlow_Cint();
  G__cpp_setup_globalNpeFlow_Cint();
  G__cpp_setup_funcNpeFlow_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncNpeFlow_Cint();
  return;
}
class G__cpp_setup_initNpeFlow_Cint {
  public:
    G__cpp_setup_initNpeFlow_Cint() { G__add_setup_func("NpeFlow_Cint",(G__incsetup)(&G__cpp_setupNpeFlow_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initNpeFlow_Cint() { G__remove_setup_func("NpeFlow_Cint"); }
};
G__cpp_setup_initNpeFlow_Cint G__cpp_setup_initializerNpeFlow_Cint;

