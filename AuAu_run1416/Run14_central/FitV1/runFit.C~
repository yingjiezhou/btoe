#include "fitdata2D.C"
void runFit(int rs=1,int save=1, int doAllFits=1, int q=-1, int HT=0, int lowpt=1)
{
///////////////////////////////////
    gROOT->ProcessLine(".x ~/myStyle.C");  
    TGaxis::SetMaxDigits(3); 
///////////////////////////////////
    int const numEtaBins=4;
    double binning[numEtaBins+1]={-0.8,-0.4,0,0.4,0.8};   
    if(doAllFits){
        int etaStart=1;
        int etaEnd=numEtaBins;
	int qqStart=-1;
	int qqEnd=1;       
    } else {
        int etaStart=1;//Here  
        int etaEnd=etaStart; 
	int qqStart=q;
	int qqEnd=q;
    }
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
    for(int qq =qqStart;qq<qqEnd+1;qq+=1){
	if(qq>0)int pass=1;
	if(qq<0)int pass=2;
	if(qq==0)int pass=0;
	for(int eta=etaStart;eta<etaEnd+1;eta++){
	    char dir1[150];char dir2[150];char dir3[150];
	    char file[50];char dat[50];char datc[50];        
	    sprintf(dir1,"%1.0f/fits/v1_Eta_%1.0f",pass,eta);
	    sprintf(file,"%1.0f/yields.dat",pass);
//////////////////////////////////////////////////////////////////
	    TFile *f_D = new TFile("./root/histograms.root");
	    Res = (TH1F*)f_D->Get("Res");
	    Weight = (TH1F*)f_D->Get("Weight");		 
	    double res=0;
	    for(int i = 1;i<10;i++){
		res+=(Res->GetBinContent(i)*Weight->GetBinContent(i)/Weight->Integral());
	    }
	    //double res = 1/res_inv;
	    cout << "Resolution " << res << endl;
	    double frac = res*0.33;//45;//0.45 for pt>2
	    //double frac = 0.60 * res; //pt>1.5 no dca cut
	    if(lowpt==0){
		if(qq!=0){
		    if(qq>0)h01_2D = (TH2F*)f_D->Get("he_nobias_tight_p");
		    if(qq<0)h01_2D = (TH2F*)f_D->Get("he_nobias_tight_m");  	    	
		}else{
		    h01_2D = (TH2F*)f_D->Get("he_nobias_tight_p");  
		    h01_2D1 = (TH2F*)f_D->Get("he_nobias_tight_m");  	    
		    h01_2D->Add(h01_2D1);
		}
	    }
	    if(lowpt==1){
                if(qq!=0){
                    if(qq>0)h01_2D = (TH2F*)f_D->Get("he_loose_p");
                    if(qq<0)h01_2D = (TH2F*)f_D->Get("he_loose_m");
                }else{
                    h01_2D = (TH2F*)f_D->Get("he_loose_p");
                    h01_2D1 = (TH2F*)f_D->Get("he_loose_m");
                    h01_2D->Add(h01_2D1);
                }
            }
	    if(eta>0){
		h01_2D->GetYaxis()->SetRangeUser(binning[eta-1],binning[eta]);       
	    }		
	    h01 = (TH1F*)h01_2D->ProjectionX();
	    cout << " Yield  " << h01->Integral() << endl;	
	    h01->Rebin(4);
	    int bin = h01->FindBin(0);
	    /*for(int i = 1;i<h01->GetNbinsX()+1;i++){
		if(i<bin){
		    double temp = h01->GetBinContent(bin+i-1);
		    double er = h01->GetBinError(bin+i-1);
		    double temp1 = h01->GetBinContent(i);
		    double er1 = h01->GetBinError(i);	
		    h01->SetBinContent(bin+i-1,temp1+temp);
		    h01->SetBinError(bin+i-1,sqrt(er1*er1+er*er));
		    h01->SetBinContent(bin,0);
		    h01->SetBinError(bin,0);
		    cout << h01->GetBinContent(i)<< " " << temp1+temp << " " << h01->GetBinContent(bin+i-1) << endl;
		}
	    }*/
	    fitdata2D(h01,save,file,dir1,eta,1.5,8.5,HT,frac);
	}//End eta
    }
}//End
