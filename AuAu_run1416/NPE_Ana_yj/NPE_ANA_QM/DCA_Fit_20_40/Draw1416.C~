void Draw1416(int save=1, int HT=1)
{//////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////
    gROOT->ProcessLine(".x ~/myStyle.C");  
    TGaxis::SetMaxDigits(3); 

    int const numPtBins=9;
    double binning[numPtBins+1]={0.6,1,1.2,1.5,2.0,2.5,3.5,4.5,5.5,8.5};    

    int pt=8;
    char dFile[100];
    char dFile1[100];
    sprintf(dFile,"../production/NPE_Tuples_TuneB11.root");
    TFile *f_D = new TFile(dFile);
    sprintf(dFile1,"../production/NPE_Tuples_Run16.root");
    TFile *f_D1 = new TFile(dFile1);

    if(HT){
	h01_2D = (TH2F*)f_D->Get("hDcaLog3D_5");
	h01_2D_pi = (TH2F*)f_D->Get("hDcaLog3D_pi_3");
	h01_2D1 = (TH2F*)f_D1->Get("hDcaLog3D_5");
	h01_2D1->SetName("h01_2D1");
	h01_2D_pi1 = (TH2F*)f_D1->Get("hDcaLog3D_pi_3");
	h01_2D_pi1->SetName("h01_2D_pi1");
    }else{
	h01_2D = (TH2F*)f_D->Get("hDcaLog3D_1");
	h01_2D_pi = (TH2F*)f_D->Get("hDcaLog3D_pi_4");
	h01_2D1 = (TH2F*)f_D1->Get("hDcaLog3D_1");
	h01_2D1->SetName("h01_2D1");
	h01_2D_pi1 = (TH2F*)f_D1->Get("hDcaLog3D_pi_4");
	h01_2D_pi1->SetName("h01_2D_pi1");
    }

    h01_2D_pi->GetYaxis()->SetRangeUser(-4,-1);
    h01_2D_pi1->GetYaxis()->SetRangeUser(-4,-1);
    h01_2D->GetYaxis()->SetRangeUser(-4,-1);
    h01_2D1->GetYaxis()->SetRangeUser(-4,-1);
	
    if(pt>0){
	h01_2D->GetXaxis()->SetRangeUser(binning[pt-1],binning[pt]);
	h01_2D1->GetXaxis()->SetRangeUser(binning[pt-1],binning[pt]);
	h01_2D_pi->GetXaxis()->SetRangeUser(binning[pt-1],binning[pt]);
	h01_2D_pi1->GetXaxis()->SetRangeUser(binning[pt-1],binning[pt]);	

    }
    h01=(TH1F*)h01_2D->ProjectionY();
    h01_1=(TH1F*)h01_2D1->ProjectionY();
    h01_pi=(TH1F*)h01_2D_pi->ProjectionY();
    h01_pi1=(TH1F*)h01_2D_pi1->ProjectionY();
    h01->Rebin(4);
    h01_1->Rebin(4);
    h01_pi1->Rebin(4); 
    h01_pi->Rebin(4);   
	
    TCanvas *c1 = new TCanvas ("c1","elec");
    norm(h01);
    norm(h01_1);
    norm(h01_pi);
    norm(h01_pi1); 
    h01_1->SetLineColor(kRed);
    h01_pi1->SetLineColor(kRed);
    h01_1->SetMarkerColor(kRed);
    h01_pi1->SetMarkerColor(kRed);
    h01_1->Draw("same PE");
    h01->Draw("same PE");;		
    TCanvas *c11 = new TCanvas ("c11","pion");
    h01_pi->Draw("PE");
    h01_pi1->Draw("same PE");
}//End
void norm(TH1F *h){
    double norm1 = h->Integral();
    int bins = h->GetNbinsX();
    for(int i=1; i<bins+1;i++){
        double temp = h->GetBinContent(i);
        double width = h->GetBinWidth(i);
        double err = h->GetBinError(i);
        h->SetBinContent(i,temp/norm1);
        h->SetBinError(i,err/norm1);
    }
}
